{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\src\\\\MyCalendar.js\";\nimport React, { useState, Component, useEffect, setState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './App.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'moment/locale/ru';\nimport { Alert, useAlert } from 'react-alert';\nimport { userName } from './Home';\nimport Clock from 'react-clock';\n\nfunction MyCalendar() {\n  var localizer = momentLocalizer(moment);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      eventsList = _useState2[0],\n      setEventsList = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alarmTime2 = _useState4[0],\n      setAlarm = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      seconds = _useState6[0],\n      setSeconds = _useState6[1];\n\n  var state = {\n    currentTime: new Date().toLocaleTimeString('ru', {\n      hour12: false\n    })\n  };\n  useEffect(function () {\n    var timer = setInterval(function () {\n      setSeconds(state.currentTime);\n    }, 1000);\n    return function () {\n      return clearInterval(timer);\n    };\n  });\n\n  function handleSelect(_ref) {\n    var start = _ref.start,\n        end = _ref.end,\n        userName = _ref.userName;\n    var title = window.prompt(\"New Event name\");\n\n    if (title) {\n      var newEvent = {\n        userName: {\n          userName: userName\n        },\n        start: start,\n        end: end,\n        title: title,\n        alarmTime1: '14:30:30'\n      };\n      setEventsList([].concat(_toConsumableArray(eventsList), [newEvent]));\n      setAlarm([].concat(_toConsumableArray(alarmTime2), [newEvent.alarmTime1]));\n    }\n  }\n\n  if (state.currentTime === setAlarm(_toConsumableArray(alarmTime2))) {\n    alert(\"its time!\");\n  } else {\n    console.log(\"not yet\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    messages: {\n      next: 'Следущий',\n      previous: 'Предыдущий',\n      today: 'Сегодня',\n      month: 'Месяц',\n      week: 'Неделя',\n      day: 'День',\n      yesterday: 'Вчера',\n      tomorrow: 'Завтра',\n      agenda: 'Мероприятия',\n      noEventsInRange: 'Не найдено никаких мероприятий в текущем периоде.',\n      showMore: function showMore(total) {\n        return '+' + total + 'событий';\n      }\n    },\n    selectable: true,\n    defaultView: \"week\",\n    defaultDate: new Date(),\n    localizer: localizer,\n    events: eventsList,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    style: {\n      height: 500\n    },\n    onSelectSlot: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Number of seconds is \", seconds), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, alarmTime2));\n}\n\nexport default MyCalendar;","map":{"version":3,"sources":["C:/Users/kolya/IdeaProjects/my-app2/src/MyCalendar.js"],"names":["React","useState","Component","useEffect","setState","ReactDOM","Calendar","momentLocalizer","moment","Alert","useAlert","userName","Clock","MyCalendar","localizer","eventsList","setEventsList","alarmTime2","setAlarm","seconds","setSeconds","state","currentTime","Date","toLocaleTimeString","hour12","timer","setInterval","clearInterval","handleSelect","start","end","title","window","prompt","newEvent","alarmTime1","alert","console","log","next","previous","today","month","week","day","yesterday","tomorrow","agenda","noEventsInRange","showMore","total","height"],"mappings":"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","sourcesContent":["import React, { useState, Component, useEffect, setState  } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport './App.css';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'moment/locale/ru'\r\nimport { Alert, useAlert } from 'react-alert'\r\nimport {userName} from './Home';\r\nimport Clock from 'react-clock';\r\n\r\nfunction MyCalendar() {\r\n    const localizer = momentLocalizer(moment);\r\n    const [eventsList, setEventsList] = useState([]);\r\n    const [alarmTime2, setAlarm] = useState([]);\r\n    const [seconds, setSeconds] = useState([]);\r\n\r\n    var state = {\r\n              currentTime: new Date().toLocaleTimeString('ru', { hour12: false }),\r\n              }\r\n\r\n    useEffect(() => {\r\n             const timer = setInterval(() => {\r\n                  setSeconds(\r\n                  state.currentTime )\r\n             }, 1000);\r\n             return () => clearInterval(timer);\r\n    });\r\n\r\n\r\n\r\n    function handleSelect({ start, end, userName }) {\r\n        const title = window.prompt(\"New Event name\");\r\n        if (title) {\r\n          var newEvent = {\r\n            userName: {userName},\r\n            start: start,\r\n            end: end,\r\n            title: title,\r\n            alarmTime1: '14:30:30',\r\n          };\r\n          setEventsList([...eventsList, newEvent]);\r\n          setAlarm([...alarmTime2, newEvent.alarmTime1]);\r\n          }\r\n\r\n        }\r\n\r\n          if(state.currentTime === setAlarm([...alarmTime2])) {\r\n                                 alert(\"its time!\");\r\n                                 } else {\r\n                                 console.log(\"not yet\");\r\n                                 }\r\n    return (\r\n        <div>\r\n        <Calendar\r\n        messages={{\r\n                  next: 'Следущий',\r\n                  previous: 'Предыдущий',\r\n                  today: 'Сегодня',\r\n                  month: 'Месяц',\r\n                  week: 'Неделя',\r\n                  day: 'День',\r\n                  yesterday: 'Вчера',\r\n                  tomorrow: 'Завтра',\r\n                  agenda: 'Мероприятия',\r\n                  noEventsInRange: 'Не найдено никаких мероприятий в текущем периоде.',\r\n\r\n                  showMore: function showMore(total) {\r\n                    return '+' + total + 'событий';\r\n                  }\r\n        }}\r\n        selectable\r\n        defaultView=\"week\"\r\n        defaultDate={new Date()}\r\n        localizer={localizer}\r\n        events={eventsList}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: 500 }}\r\n        onSelectSlot={handleSelect}\r\n\r\n        />\r\n        <h1>Number of seconds is {seconds}</h1>\r\n        <h1>{alarmTime2}</h1>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}