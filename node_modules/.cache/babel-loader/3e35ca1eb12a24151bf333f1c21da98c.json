{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _toConsumableArray from \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\src\\\\MyCalendar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState, Component, useEffect, setState, setInterval } from 'react';\nimport ReactDOM from \"react-dom\";\nimport './App.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'moment/locale/ru';\nimport { Alert, useAlert } from 'react-alert';\n\nfunction MyCalendar() {\n  var localizer = momentLocalizer(moment);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      eventsList = _useState2[0],\n      setEventsList = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alarmsList = _useState4[0],\n      setAlarmsList = _useState4[1];\n\n  function handleSelect(_ref) {\n    var start = _ref.start,\n        end = _ref.end;\n    var title = window.prompt(\"New Event name\");\n\n    if (title) {\n      var newEvent = {\n        start: start,\n        end: end,\n        title: title\n      };\n      setEventsList([].concat(_toConsumableArray(eventsList), [newEvent]));\n    }\n  }\n\n  ;\n\n  var Alarm = /*#__PURE__*/function (_React$Component) {\n    _inherits(Alarm, _React$Component);\n\n    var _super = _createSuper(Alarm);\n\n    function Alarm() {\n      var _this;\n\n      _classCallCheck(this, Alarm);\n\n      _this = _super.call(this);\n      _this.state = {\n        currentTime: '',\n        alarmTime: '12:50:00'\n      };\n      return _this;\n    }\n\n    _createClass(Alarm, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this2 = this;\n\n        this.clock = setInterval(function () {\n          return _this2.setState({\n            currentTime: new Date().toLocaleTimeString('ru', {\n              hour12: false\n            })\n          });\n        }, 1000);\n        this.interval = setInterval(function () {\n          return _this2.checkAlarmClock();\n        }, 1000);\n      }\n    }, {\n      key: \"checkAlarmClock\",\n      value: function checkAlarmClock() {\n        if (this.state.currentTime === this.state.alarmTime) {\n          alert(\"its time!\");\n        } else {\n          console.log(\"not yet\");\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }\n        }, this.alarmMessage), /*#__PURE__*/React.createElement(Calendar, {\n          messages: {\n            next: 'Следущий',\n            previous: 'Предыдущий',\n            today: 'Сегодня',\n            month: 'Месяц',\n            week: 'Неделя',\n            day: 'День',\n            yesterday: 'Вчера',\n            tomorrow: 'Завтра',\n            agenda: 'Мероприятия',\n            noEventsInRange: 'Не найдено никаких мероприятий в текущем периоде.',\n            showMore: function showMore(total) {\n              return '+' + total + 'событий';\n            }\n          },\n          selectable: true,\n          defaultView: \"week\",\n          defaultDate: new Date(),\n          localizer: localizer,\n          events: eventsList,\n          startAccessor: \"start\",\n          endAccessor: \"end\",\n          style: {\n            height: 500\n          },\n          onSelectSlot: handleSelect,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 9\n          }\n        }));\n      }\n    }]);\n\n    return Alarm;\n  }(React.Component);\n}\n\nexport default MyCalendar;","map":{"version":3,"sources":["C:/Users/kolya/IdeaProjects/my-app2/src/MyCalendar.js"],"names":["React","useState","Component","useEffect","setState","setInterval","ReactDOM","Calendar","momentLocalizer","moment","Alert","useAlert","MyCalendar","localizer","eventsList","setEventsList","alarmsList","setAlarmsList","handleSelect","start","end","title","window","prompt","newEvent","Alarm","state","currentTime","alarmTime","clock","Date","toLocaleTimeString","hour12","interval","checkAlarmClock","alert","console","log","alarmMessage","next","previous","today","month","week","day","yesterday","tomorrow","agenda","noEventsInRange","showMore","total","height"],"mappings":"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","sourcesContent":["import React, { useState, Component, useEffect, setState, setInterval  } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport './App.css';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'moment/locale/ru'\r\nimport { Alert, useAlert } from 'react-alert'\r\n\r\nfunction MyCalendar()  {\r\n\r\n    const localizer = momentLocalizer(moment);\r\n    const [eventsList, setEventsList] = useState([]);\r\n    const [alarmsList, setAlarmsList] = useState([]);\r\n\r\n\r\n    function handleSelect({ start, end }) {\r\n        const title = window.prompt(\"New Event name\");\r\n        if (title) {\r\n          var newEvent = {\r\n            start: start,\r\n            end: end,\r\n            title: title,\r\n          };\r\n          setEventsList([...eventsList, newEvent]);\r\n        }\r\n      };\r\n\r\n    class Alarm extends React.Component {\r\n      constructor() {\r\n        super();\r\n        this.state = {\r\n          currentTime: '',\r\n          alarmTime: '12:50:00'\r\n        };\r\n      }\r\n\r\n      componentDidMount(){\r\n        this.clock = setInterval(() => this.setState({\r\n                           currentTime: new Date().toLocaleTimeString('ru', { hour12: false })\r\n                         }), 1000)\r\n        this.interval = setInterval(\r\n          () => this.checkAlarmClock(), 1000)\r\n      }\r\n\r\n      checkAlarmClock(){\r\n          if(this.state.currentTime === this.state.alarmTime) {\r\n            alert(\"its time!\");\r\n          } else {\r\n            console.log(\"not yet\");\r\n          }\r\n        }\r\n\r\n      render() {\r\n    return (\r\n        <div>\r\n        <h2>{this.alarmMessage}</h2>\r\n        <Calendar\r\n        messages={{\r\n                  next: 'Следущий',\r\n                  previous: 'Предыдущий',\r\n                  today: 'Сегодня',\r\n                  month: 'Месяц',\r\n                  week: 'Неделя',\r\n                  day: 'День',\r\n                  yesterday: 'Вчера',\r\n                  tomorrow: 'Завтра',\r\n                  agenda: 'Мероприятия',\r\n                  noEventsInRange: 'Не найдено никаких мероприятий в текущем периоде.',\r\n\r\n                  showMore: function showMore(total) {\r\n                    return '+' + total + 'событий';\r\n                  }\r\n        }}\r\n        selectable\r\n        defaultView=\"week\"\r\n        defaultDate={new Date()}\r\n        localizer={localizer}\r\n        events={eventsList}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: 500 }}\r\n        onSelectSlot={handleSelect}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n}\r\n}\r\n\r\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}