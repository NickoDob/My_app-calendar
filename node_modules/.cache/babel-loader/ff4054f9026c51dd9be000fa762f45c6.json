{"ast":null,"code":"import { createContext, useMemo } from 'react';\nimport pick from 'lodash/pick';\n/**\r\n * Context to store the pagination part of the useListController() result.\r\n *\r\n * Use the useListPaginationContext() hook to read the pagination information.\r\n * That's what List components do in react-admin (e.g. <Pagination>).\r\n *\r\n * @typedef {Object} ListPaginationContextValue\r\n * @prop {boolean}  loading boolean that is true on mount, and false once the data was fetched\r\n * @prop {integer}  total the total number of results for the current filters, excluding pagination. Useful to build the pagination controls. e.g. 23\r\n * @prop {integer}  page the current page. Starts at 1\r\n * @prop {Function} setPage a callback to change the page, e.g. setPage(3)\r\n * @prop {integer}  perPage the number of results per page. Defaults to 25\r\n * @prop {Function} setPerPage a callback to change the number of results per page, e.g. setPerPage(25)\r\n * @prop {string}   resource the resource name, deduced from the location. e.g. 'posts'\r\n *\r\n * @typedef Props\r\n * @prop {ListPaginationContextValue} value\r\n *\r\n * @param {Props}\r\n *\r\n * @see useListController\r\n * @see useListContext\r\n *\r\n * @example\r\n *\r\n * import { useListController, ListPaginationContext } from 'ra-core';\r\n *\r\n * const List = props => {\r\n *     const controllerProps = useListController(props);\r\n *     return (\r\n *         <ListPaginationContext.Provider value={controllerProps}>\r\n *             ...\r\n *         </ListPaginationContext.Provider>\r\n *     );\r\n * };\r\n */\n\nvar ListPaginationContext = createContext({\n  loading: null,\n  page: null,\n  perPage: null,\n  setPage: null,\n  setPerPage: null,\n  total: null,\n  resource: null\n});\nListPaginationContext.displayName = 'ListPaginationContext';\nexport var usePickPaginationContext = function usePickPaginationContext(context) {\n  return useMemo(function () {\n    return pick(context, ['loading', 'page', 'perPage', 'setPage', 'setPerPage', 'total', 'resource']);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [context.loading, context.page, context.perPage, context.setPage, context.setPerPage, context.total]);\n};\nexport default ListPaginationContext;","map":null,"metadata":{},"sourceType":"module"}