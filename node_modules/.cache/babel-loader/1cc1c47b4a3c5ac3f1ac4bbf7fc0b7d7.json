{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { cloneElement, Children } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { useResourceDefinition, useShowContext } from 'ra-core';\nimport { ShowActions as DefaultActions } from './ShowActions';\nimport TitleForRecord from '../layout/TitleForRecord';\nexport var ShowView = function ShowView(props) {\n  var _a;\n\n  var actions = props.actions,\n      aside = props.aside,\n      children = props.children,\n      classesOverride = props.classes,\n      className = props.className,\n      Content = props.component,\n      title = props.title,\n      rest = __rest(props, [\"actions\", \"aside\", \"children\", \"classes\", \"className\", \"component\", \"title\"]);\n\n  var classes = useStyles(props);\n\n  var _b = useShowContext(props),\n      basePath = _b.basePath,\n      defaultTitle = _b.defaultTitle,\n      hasList = _b.hasList,\n      record = _b.record,\n      resource = _b.resource,\n      version = _b.version;\n\n  var hasEdit = useResourceDefinition(props).hasEdit;\n  var finalActions = typeof actions === 'undefined' && hasEdit ? React.createElement(DefaultActions, null) : actions;\n\n  if (!children) {\n    return null;\n  }\n\n  return React.createElement(\"div\", __assign({\n    className: classnames('show-page', classes.root, className)\n  }, sanitizeRestProps(rest)), React.createElement(TitleForRecord, {\n    title: title,\n    record: record,\n    defaultTitle: defaultTitle\n  }), finalActions && cloneElement(finalActions, __assign({\n    basePath: basePath,\n    data: record,\n    hasList: hasList,\n    hasEdit: hasEdit,\n    resource: resource\n  }, finalActions.props)), React.createElement(\"div\", {\n    className: classnames(classes.main, (_a = {}, _a[classes.noActions] = !finalActions, _a))\n  }, React.createElement(Content, {\n    className: classes.card\n  }, record && cloneElement(Children.only(children), {\n    resource: resource,\n    basePath: basePath,\n    record: record,\n    version: version\n  })), aside && cloneElement(aside, {\n    resource: resource,\n    basePath: basePath,\n    record: record,\n    version: version\n  })));\n};\nShowView.propTypes = {\n  actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n  aside: PropTypes.element,\n  basePath: PropTypes.string,\n  children: PropTypes.element,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  defaultTitle: PropTypes.any,\n  hasEdit: PropTypes.bool,\n  hasList: PropTypes.bool,\n  loading: PropTypes.bool,\n  loaded: PropTypes.bool,\n  record: PropTypes.object,\n  resource: PropTypes.string,\n  title: PropTypes.any,\n  version: PropTypes.node\n};\nShowView.defaultProps = {\n  classes: {},\n  component: Card\n};\nvar useStyles = makeStyles({\n  root: {},\n  main: {\n    display: 'flex'\n  },\n  noActions: {\n    marginTop: '1em'\n  },\n  card: {\n    flex: '1 1 auto'\n  }\n}, {\n  name: 'RaShow'\n});\n\nvar sanitizeRestProps = function sanitizeRestProps(_a) {\n  var _b = _a.basePath,\n      basePath = _b === void 0 ? null : _b,\n      _c = _a.defaultTitle,\n      defaultTitle = _c === void 0 ? null : _c,\n      _d = _a.hasCreate,\n      hasCreate = _d === void 0 ? null : _d,\n      _e = _a.hasEdit,\n      hasEdit = _e === void 0 ? null : _e,\n      _f = _a.hasList,\n      hasList = _f === void 0 ? null : _f,\n      _g = _a.hasShow,\n      hasShow = _g === void 0 ? null : _g,\n      _h = _a.history,\n      history = _h === void 0 ? null : _h,\n      _j = _a.id,\n      id = _j === void 0 ? null : _j,\n      _k = _a.loaded,\n      loaded = _k === void 0 ? null : _k,\n      _l = _a.loading,\n      loading = _l === void 0 ? null : _l,\n      _m = _a.location,\n      location = _m === void 0 ? null : _m,\n      _o = _a.match,\n      match = _o === void 0 ? null : _o,\n      _p = _a.options,\n      options = _p === void 0 ? null : _p,\n      _q = _a.refetch,\n      refetch = _q === void 0 ? null : _q,\n      _r = _a.permissions,\n      permissions = _r === void 0 ? null : _r,\n      rest = __rest(_a, [\"basePath\", \"defaultTitle\", \"hasCreate\", \"hasEdit\", \"hasList\", \"hasShow\", \"history\", \"id\", \"loaded\", \"loading\", \"location\", \"match\", \"options\", \"refetch\", \"permissions\"]);\n\n  return rest;\n};","map":null,"metadata":{},"sourceType":"module"}