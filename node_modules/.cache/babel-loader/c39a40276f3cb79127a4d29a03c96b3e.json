{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'moment/locale/ru';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyCalendar() {\n  _s();\n\n  const localizer = momentLocalizer(moment);\n  const [eventsList, setEventsList] = useState([]);\n\n  function handleSelect({\n    start,\n    end\n  }) {\n    const title = window.prompt(\"New Event name\");\n\n    if (title) {\n      var newEvent = {\n        start: start,\n        end: end,\n        title: title\n      };\n      setEventsList([...eventsList, newEvent]);\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      selectable: true,\n      defaultView: \"week\",\n      defaultDate: new Date(),\n      localizer: localizer,\n      events: eventsList,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 500\n      },\n      onSelectSlot: handleSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyCalendar, \"vxm730YjTDNsmEX0VmoEbz8kBBk=\");\n\n_c = MyCalendar;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MyCalendar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyCalendar\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/kolya/IdeaProjects/my-app2/src/App.js"],"names":["React","useState","Calendar","momentLocalizer","moment","MyCalendar","localizer","eventsList","setEventsList","handleSelect","start","end","title","window","prompt","newEvent","Date","height","App"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAO,mDAAP;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,kBAAP;;;AAGA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAMC,SAAS,GAAGH,eAAe,CAACC,MAAD,CAAjC;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;;AAEA,WAASQ,YAAT,CAAsB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAtB,EAAsC;AAClC,UAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,gBAAd,CAAd;;AACA,QAAIF,KAAJ,EAAW;AACT,UAAIG,QAAQ,GAAG;AACbL,QAAAA,KAAK,EAAEA,KADM;AAEbC,QAAAA,GAAG,EAAEA,GAFQ;AAGbC,QAAAA,KAAK,EAAEA;AAHM,OAAf;AAKAJ,MAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBQ,QAAhB,CAAD,CAAb;AACD;AACF;;AAAA;AAEH,sBACI;AAAA,2BACA,QAAC,QAAD;AACA,MAAA,UAAU,MADV;AAEA,MAAA,WAAW,EAAC,MAFZ;AAGA,MAAA,WAAW,EAAE,IAAIC,IAAJ,EAHb;AAIA,MAAA,SAAS,EAAEV,SAJX;AAKA,MAAA,MAAM,EAAEC,UALR;AAMA,MAAA,aAAa,EAAC,OANd;AAOA,MAAA,WAAW,EAAC,KAPZ;AAQA,MAAA,KAAK,EAAE;AAAEU,QAAAA,MAAM,EAAE;AAAV,OARP;AASA,MAAA,YAAY,EAAER;AATd;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GA/BQJ,U;;KAAAA,U;;AAiCT,SAASa,GAAT,GAAe;AACX,sBACI;AAAA,2BACA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;MANQA,G;AAQT,eAAeA,GAAf","sourcesContent":["import React, { useState  } from 'react';\nimport './App.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport 'moment/locale/ru'\n\n\nfunction MyCalendar() {\n    const localizer = momentLocalizer(moment)\n    const [eventsList, setEventsList] = useState([]);\n\n    function handleSelect({ start, end }) {\n        const title = window.prompt(\"New Event name\");\n        if (title) {\n          var newEvent = {\n            start: start,\n            end: end,\n            title: title\n          };\n          setEventsList([...eventsList, newEvent]);\n        }\n      };\n\n    return (\n        <div>\n        <Calendar\n        selectable\n        defaultView=\"week\"\n        defaultDate={new Date()}\n        localizer={localizer}\n        events={eventsList}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ height: 500 }}\n        onSelectSlot={handleSelect}\n        />\n        </div>\n    )\n}\n\nfunction App() {\n    return (\n        <div>\n        <MyCalendar />\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}