{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { parsePath } from 'history';\nimport resolveRedirectTo from '../util/resolveRedirectTo';\nimport { refreshView } from '../actions/uiActions';\n/**\n * Hook for Redirection Side Effect\n *\n * @example\n *\n * const redirect = useRedirect();\n * // redirect to list view\n * redirect('list', '/posts');\n * // redirect to edit view\n * redirect('edit', '/posts', 123);\n * // redirect to edit view with state data\n * redirect('edit', '/comment', 123, {}, { record: { post_id: record.id } });\n * // do not redirect (resets the record form)\n * redirect(false);\n * // redirect to the result of a function\n * redirect((redirectTo, basePath, id, data) => ...)\n */\n\nvar useRedirect = function useRedirect() {\n  var dispatch = useDispatch();\n  var history = useHistory(); // Note: history is mutable. This prevents render loops in useCallback.\n\n  return useCallback(function (redirectTo, basePath, id, data, state) {\n    if (basePath === void 0) {\n      basePath = '';\n    }\n\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (!redirectTo) {\n      if (history.location.state || history.location.search) {\n        history.replace(__assign(__assign({}, history.location), {\n          state: state,\n          search: undefined\n        }));\n      } else {\n        dispatch(refreshView());\n      }\n\n      return;\n    }\n\n    history.push(__assign(__assign({}, parsePath(resolveRedirectTo(redirectTo, basePath, id, data))), {\n      state: __assign({\n        _scrollToTop: true\n      }, state)\n    }));\n  }, [dispatch, history]);\n};\n\nexport default useRedirect;","map":null,"metadata":{},"sourceType":"module"}