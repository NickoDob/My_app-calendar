{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport lodashGet from 'lodash/get'; // @ts-ignore\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport DefaultIcon from '@material-ui/icons/ViewList';\nimport classnames from 'classnames';\nimport { useGetResourceLabel, getResources } from 'ra-core';\nimport DashboardMenuItem from './DashboardMenuItem';\nimport MenuItemLink from './MenuItemLink';\nexport var MENU_WIDTH = 240;\nexport var CLOSED_MENU_WIDTH = 55;\nvar useStyles = makeStyles(function (theme) {\n  var _a;\n\n  return {\n    main: (_a = {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'flex-start',\n      marginTop: '0.5em'\n    }, _a[theme.breakpoints.only('xs')] = {\n      marginTop: 0\n    }, _a[theme.breakpoints.up('md')] = {\n      marginTop: '1.5em'\n    }, _a),\n    open: {\n      width: lodashGet(theme, 'menu.width', MENU_WIDTH)\n    },\n    closed: {\n      width: lodashGet(theme, 'menu.closedWidth', CLOSED_MENU_WIDTH)\n    }\n  };\n}, {\n  name: 'RaMenu'\n});\n\nvar Menu = function Menu(props) {\n  var _a;\n\n  var classesOverride = props.classes,\n      className = props.className,\n      dense = props.dense,\n      hasDashboard = props.hasDashboard,\n      onMenuClick = props.onMenuClick,\n      logout = props.logout,\n      rest = __rest(props, [\"classes\", \"className\", \"dense\", \"hasDashboard\", \"onMenuClick\", \"logout\"]);\n\n  var classes = useStyles(props);\n  var open = useSelector(function (state) {\n    return state.admin.ui.sidebarOpen;\n  });\n  var resources = useSelector(getResources, shallowEqual);\n  var getResourceLabel = useGetResourceLabel();\n  return React.createElement(\"div\", __assign({\n    className: classnames(classes.main, (_a = {}, _a[classes.open] = open, _a[classes.closed] = !open, _a), className)\n  }, rest), hasDashboard && React.createElement(DashboardMenuItem, {\n    dense: dense\n  }), resources.filter(function (r) {\n    return r.hasList;\n  }).map(function (resource) {\n    return React.createElement(MenuItemLink, {\n      key: resource.name,\n      to: {\n        pathname: \"/\" + resource.name,\n        state: {\n          _scrollToTop: true\n        }\n      },\n      primaryText: getResourceLabel(resource.name, 2),\n      leftIcon: resource.icon ? React.createElement(resource.icon, null) : React.createElement(DefaultIcon, null),\n      dense: dense\n    });\n  }));\n};\n\nMenu.propTypes = {\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  dense: PropTypes.bool,\n  hasDashboard: PropTypes.bool,\n  logout: PropTypes.element,\n  onMenuClick: PropTypes.func\n};\nMenu.defaultProps = {\n  onMenuClick: function onMenuClick() {\n    return null;\n  }\n};\nexport default Menu;","map":null,"metadata":{},"sourceType":"module"}