{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\")\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\nconst myEventsList = [{\n  start: new Date(),\n  end: new Date(),\n  title: \"special event\"\n}, {\n  start: new Date(),\n  end: new Date(),\n  title: 'Call John'\n}, {\n  start: new Date(),\n  end: new Date(),\n  title: 'Meeting with Bob'\n}];\nimport { MonthlyBody, MonthlyCalendar, MonthlyNav, DefaultMonthlyEventItem } from 'react-calendar/react-calendar-master/src';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyMonthlyCalendar = () => {\n  let [currentMonth, setCurrentMonth] = useState < Date > startOfMonth(new Date());\n  return /*#__PURE__*/_jsxDEV(MonthlyCalendar, {\n    currentMonth: currentMonth,\n    onCurrentMonthChange: date => setCurrentMonth(date),\n    children: [/*#__PURE__*/_jsxDEV(MonthlyNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MonthlyBody, {\n      events: [{\n        title: 'Call John',\n        date: subHours(new Date(), 2)\n      }, {\n        title: 'Call John',\n        date: subHours(new Date(), 1)\n      }, {\n        title: 'Meeting with Bob',\n        date: new Date()\n      }],\n      renderDay: data => data.map((item, index) => /*#__PURE__*/_jsxDEV(DefaultMonthlyEventItem, {\n        title: item.title,\n        date: item.date\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = MyMonthlyCalendar;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: myEventsList,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 500\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyMonthlyCalendar\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/kolya/IdeaProjects/my-app2/src/App.js"],"names":["React","Calendar","dateFnsLocalizer","format","parse","startOfWeek","getDay","locales","require","localizer","myEventsList","start","Date","end","title","MonthlyBody","MonthlyCalendar","MonthlyNav","DefaultMonthlyEventItem","MyMonthlyCalendar","currentMonth","setCurrentMonth","useState","startOfMonth","date","subHours","data","map","item","index","App","height"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport format from \"date-fns/format\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport getDay from \"date-fns/getDay\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\")\n};\n\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales\n});\n\nconst myEventsList = [\n  { start: new Date(), end: new Date(), title: \"special event\" },\n  { start: new Date(), end: new Date(), title: 'Call John' },\n  { start: new Date(), end: new Date(), title: 'Meeting with Bob' },\n];\n\nimport {\n  MonthlyBody,\n  MonthlyCalendar,\n  MonthlyNav,\n  DefaultMonthlyEventItem,\n} from 'react-calendar/react-calendar-master/src';\n\nexport const MyMonthlyCalendar = () => {\n  let [currentMonth, setCurrentMonth] = useState<Date>(\n    startOfMonth(new Date())\n  );\n\n  return (\n    <MonthlyCalendar\n      currentMonth={currentMonth}\n      onCurrentMonthChange={date => setCurrentMonth(date)}\n    >\n      <MonthlyNav />\n      <MonthlyBody\n        events={[\n          { title: 'Call John', date: subHours(new Date(), 2) },\n          { title: 'Call John', date: subHours(new Date(), 1) },\n          { title: 'Meeting with Bob', date: new Date() },\n        ]}\n        renderDay={data =>\n          data.map((item, index) => (\n            <DefaultMonthlyEventItem\n              key={index}\n              title={item.title}\n              date={item.date}\n            />\n          ))\n        }\n      />\n    </MonthlyCalendar>\n  );\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calendar\n        localizer={localizer}\n        events={myEventsList}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ height: 500 }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}