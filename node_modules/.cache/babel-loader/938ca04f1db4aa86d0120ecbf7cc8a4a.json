{"ast":null,"code":"import * as React from 'react';\nimport { useEffect } from 'react';\nimport { FormGroupContext } from './FormGroupContext';\nimport { useFormContext } from './useFormContext';\n/**\r\n * This provider allows its input children to register to a specific group.\r\n * This enables other components in the group to access group properties such as its\r\n * validation (valid/invalid) or whether its inputs have been updated (dirty/pristine).\r\n *\r\n * @example\r\n * import { Edit, SimpleForm, TextInput, FormGroupContextProvider, useFormGroup } from 'react-admin';\r\n * import { Accordion, AccordionDetails, AccordionSummary, Typography } from '@material-ui/core';\r\n *\r\n * const PostEdit = (props) => (\r\n *     <Edit {...props}>\r\n *         <SimpleForm>\r\n *             <TextInput source=\"title\" />\r\n *             <FormGroupContextProvider name=\"options\">\r\n *                 <Accordion>\r\n *                     <AccordionSummary\r\n *                         expandIcon={<ExpandMoreIcon />}\r\n *                         aria-controls=\"options-content\"\r\n *                         id=\"options-header\"\r\n *                     >\r\n *                         <AccordionSectionTitle name=\"options\">Options</AccordionSectionTitle>\r\n *                     </AccordionSummary>\r\n *                     <AccordionDetails id=\"options-content\" aria-labelledby=\"options-header\">\r\n *                         <TextInput source=\"teaser\" validate={minLength(20)} />\r\n *                     </AccordionDetails>\r\n *                 </Accordion>\r\n *             </FormGroupContextProvider>\r\n *         </SimpleForm>\r\n *     </Edit>\r\n * );\r\n *\r\n * const AccordionSectionTitle = ({ children, name }) => {\r\n *     const formGroupState = useFormGroup(name);\r\n *     return (\r\n *         <Typography color={formGroupState.invalid && formGroupState.dirty ? 'error' : 'inherit'}>\r\n *             {children}\r\n *         </Typography>\r\n *     );\r\n * }\r\n *\r\n * @param props The component props\r\n * @param {ReactNode} props.children The form group content\r\n * @param {String} props.name The form group name\r\n */\n\nexport var FormGroupContextProvider = function FormGroupContextProvider(_a) {\n  var children = _a.children,\n      name = _a.name;\n  var formContext = useFormContext();\n  useEffect(function () {\n    if (!formContext || !formContext.registerGroup || !formContext.unregisterGroup) {\n      console.warn(\"The FormGroupContextProvider can only be used inside a FormContext such as provided by the SimpleForm and TabbedForm components\");\n      return;\n    }\n\n    formContext.registerGroup(name);\n    return function () {\n      formContext.unregisterGroup(name);\n    };\n  }, [formContext, name]);\n  return React.createElement(FormGroupContext.Provider, {\n    value: name\n  }, children);\n};","map":null,"metadata":{},"sourceType":"module"}