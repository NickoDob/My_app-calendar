{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\nimport { ComponentPropType, useEditContext } from 'ra-core';\nimport { EditActions as DefaultActions } from './EditActions';\nimport TitleForRecord from '../layout/TitleForRecord';\nexport var EditView = function EditView(props) {\n  var _a;\n\n  var actions = props.actions,\n      aside = props.aside,\n      children = props.children,\n      classesOverride = props.classes,\n      className = props.className,\n      Content = props.component,\n      title = props.title,\n      undoable = props.undoable,\n      mutationMode = props.mutationMode,\n      rest = __rest(props, [\"actions\", \"aside\", \"children\", \"classes\", \"className\", \"component\", \"title\", \"undoable\", \"mutationMode\"]);\n\n  var classes = useStyles(props);\n\n  var _b = useEditContext(props),\n      basePath = _b.basePath,\n      defaultTitle = _b.defaultTitle,\n      hasList = _b.hasList,\n      hasShow = _b.hasShow,\n      record = _b.record,\n      redirect = _b.redirect,\n      resource = _b.resource,\n      save = _b.save,\n      saving = _b.saving,\n      version = _b.version;\n\n  var finalActions = typeof actions === 'undefined' && hasShow ? React.createElement(DefaultActions, null) : actions;\n\n  if (!children) {\n    return null;\n  }\n\n  return React.createElement(\"div\", __assign({\n    className: classnames('edit-page', classes.root, className)\n  }, sanitizeRestProps(rest)), React.createElement(TitleForRecord, {\n    title: title,\n    record: record,\n    defaultTitle: defaultTitle\n  }), finalActions && cloneElement(finalActions, __assign({\n    basePath: basePath,\n    data: record,\n    hasShow: hasShow,\n    hasList: hasList,\n    resource: resource\n  }, finalActions.props)), React.createElement(\"div\", {\n    className: classnames(classes.main, (_a = {}, _a[classes.noActions] = !finalActions, _a))\n  }, React.createElement(Content, {\n    className: classes.card\n  }, record ? cloneElement(Children.only(children), {\n    basePath: basePath,\n    record: record,\n    redirect: typeof children.props.redirect === 'undefined' ? redirect : children.props.redirect,\n    resource: resource,\n    save: typeof children.props.save === 'undefined' ? save : children.props.save,\n    saving: saving,\n    undoable: undoable,\n    mutationMode: mutationMode,\n    version: version\n  }) : React.createElement(CardContent, null, \"\\xA0\")), aside && React.cloneElement(aside, {\n    basePath: basePath,\n    record: record,\n    resource: resource,\n    version: version,\n    save: typeof children.props.save === 'undefined' ? save : children.props.save,\n    saving: saving\n  })));\n};\nEditView.propTypes = {\n  actions: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n  aside: PropTypes.element,\n  basePath: PropTypes.string,\n  children: PropTypes.element,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  component: ComponentPropType,\n  defaultTitle: PropTypes.any,\n  hasList: PropTypes.bool,\n  hasShow: PropTypes.bool,\n  mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n  record: PropTypes.object,\n  redirect: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  resource: PropTypes.string,\n  save: PropTypes.func,\n  title: PropTypes.node,\n  version: PropTypes.number,\n  onSuccess: PropTypes.func,\n  onFailure: PropTypes.func,\n  setOnSuccess: PropTypes.func,\n  setOnFailure: PropTypes.func,\n  setTransform: PropTypes.func,\n  undoable: PropTypes.bool\n};\nEditView.defaultProps = {\n  classes: {},\n  component: Card\n};\nvar useStyles = makeStyles({\n  root: {},\n  main: {\n    display: 'flex'\n  },\n  noActions: {\n    marginTop: '1em'\n  },\n  card: {\n    flex: '1 1 auto'\n  }\n}, {\n  name: 'RaEdit'\n});\n\nvar sanitizeRestProps = function sanitizeRestProps(_a) {\n  var _b = _a.basePath,\n      basePath = _b === void 0 ? null : _b,\n      _c = _a.defaultTitle,\n      defaultTitle = _c === void 0 ? null : _c,\n      _d = _a.hasCreate,\n      hasCreate = _d === void 0 ? null : _d,\n      _e = _a.hasEdit,\n      hasEdit = _e === void 0 ? null : _e,\n      _f = _a.hasList,\n      hasList = _f === void 0 ? null : _f,\n      _g = _a.hasShow,\n      hasShow = _g === void 0 ? null : _g,\n      _h = _a.history,\n      history = _h === void 0 ? null : _h,\n      _j = _a.id,\n      id = _j === void 0 ? null : _j,\n      _k = _a.loaded,\n      loaded = _k === void 0 ? null : _k,\n      _l = _a.loading,\n      loading = _l === void 0 ? null : _l,\n      _m = _a.location,\n      location = _m === void 0 ? null : _m,\n      _o = _a.match,\n      match = _o === void 0 ? null : _o,\n      _p = _a.onFailure,\n      onFailure = _p === void 0 ? null : _p,\n      _q = _a.onFailureRef,\n      onFailureRef = _q === void 0 ? null : _q,\n      _r = _a.onSuccess,\n      onSuccess = _r === void 0 ? null : _r,\n      _s = _a.onSuccessRef,\n      onSuccessRef = _s === void 0 ? null : _s,\n      _t = _a.options,\n      options = _t === void 0 ? null : _t,\n      _u = _a.permissions,\n      permissions = _u === void 0 ? null : _u,\n      _v = _a.refetch,\n      refetch = _v === void 0 ? null : _v,\n      _w = _a.save,\n      save = _w === void 0 ? null : _w,\n      _x = _a.saving,\n      saving = _x === void 0 ? null : _x,\n      _y = _a.setOnFailure,\n      setOnFailure = _y === void 0 ? null : _y,\n      _z = _a.setOnSuccess,\n      setOnSuccess = _z === void 0 ? null : _z,\n      _0 = _a.setTransform,\n      setTransform = _0 === void 0 ? null : _0,\n      _1 = _a.successMessage,\n      successMessage = _1 === void 0 ? null : _1,\n      _2 = _a.transform,\n      transform = _2 === void 0 ? null : _2,\n      _3 = _a.transformRef,\n      transformRef = _3 === void 0 ? null : _3,\n      rest = __rest(_a, [\"basePath\", \"defaultTitle\", \"hasCreate\", \"hasEdit\", \"hasList\", \"hasShow\", \"history\", \"id\", \"loaded\", \"loading\", \"location\", \"match\", \"onFailure\", \"onFailureRef\", \"onSuccess\", \"onSuccessRef\", \"options\", \"permissions\", \"refetch\", \"save\", \"saving\", \"setOnFailure\", \"setOnSuccess\", \"setTransform\", \"successMessage\", \"transform\", \"transformRef\"]);\n\n  return rest;\n};","map":null,"metadata":{},"sourceType":"module"}