{"ast":null,"code":"import { useCallback } from 'react';\nimport useMutation from './useMutation';\n/**\r\n * Get a callback to call the dataProvider.deleteMany() method, the result\r\n * of the call (the list of deleted record ids), and the loading state.\r\n *\r\n * The return value updates according to the request state:\r\n *\r\n * - initial: [deleteMany, { loading: false, loaded: false }]\r\n * - start:   [deleteMany, { loading: true, loaded: false }]\r\n * - success: [deleteMany, { data: [data from response], loading: false, loaded: true }]\r\n * - error:   [deleteMany, { error: [error from response], loading: false, loaded: false }]\r\n *\r\n * @param resource The resource name, e.g. 'posts'\r\n * @param ids The resource identifiers, e.g. [123, 456]\r\n * @param options Options object to pass to the dataProvider. May include side effects to be executed upon success or failure, e.g. { onSuccess: { refresh: true } }\r\n *\r\n * @returns The current request state. Destructure as [deleteMany, { data, error, loading, loaded }].\r\n *\r\n * The deleteMany() function can be called in 3 different ways:\r\n *  - with the same parameters as the useDeleteMany() hook: deleteMany(resource, ids, options)\r\n *  - with the same syntax as useMutation: deleteMany({ resource, payload: { ids } }, options)\r\n *  - with no parameter (if they were already passed to useDeleteMany()): deleteMany()\r\n *\r\n * @example // set params when calling the deleteMany callback\r\n *\r\n * import { useDeleteMany } from 'react-admin';\r\n *\r\n * const BulkDeletePostsButton = ({ selectedIds }) => {\r\n *     const [deleteMany, { loading, error }] = useDeleteMany();\r\n *     const handleClick = () => {\r\n *         deleteMany('posts', selectedIds)\r\n *     }\r\n *     if (error) { return <p>ERROR</p>; }\r\n *     return <button disabled={loading} onClick={deleteMany}>Delete selected posts</button>;\r\n * };\r\n *\r\n * @example // set params when calling the hook\r\n *\r\n * import { useDeleteMany } from 'react-admin';\r\n *\r\n * const BulkDeletePostsButton = ({ selectedIds }) => {\r\n *     const [deleteMany, { loading, error }] = useDeleteMany('posts', selectedIds);\r\n *     if (error) { return <p>ERROR</p>; }\r\n *     return <button disabled={loading} onClick={deleteMany}>Delete selected posts</button>;\r\n * };\r\n */\n\nvar useDeleteMany = function useDeleteMany(resource, ids, options) {\n  var _a = useMutation({\n    type: 'deleteMany',\n    resource: resource,\n    payload: {\n      ids: ids\n    }\n  }, options),\n      mutate = _a[0],\n      state = _a[1];\n\n  var deleteMany = useCallback(function (resource, ids, options) {\n    if (typeof resource === 'string') {\n      var query = {\n        type: 'deleteMany',\n        resource: resource,\n        payload: {\n          ids: ids\n        }\n      };\n      return mutate(query, options);\n    } else {\n      return mutate(resource, ids);\n    }\n  }, [mutate] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  return [deleteMany, state];\n};\n\nexport default useDeleteMany;","map":null,"metadata":{},"sourceType":"module"}