{"ast":null,"code":"import { useContext, useMemo } from 'react';\nimport defaults from 'lodash/defaults';\nimport { ShowContext } from './ShowContext';\n/**\n * Hook to read the show controller props from the ShowContext.\n *\n * Mostly used within a <ShowContext.Provider> (e.g. as a descendent of <Show>).\n *\n * But you can also use it without a <ShowContext.Provider>. In this case, it is up to you\n * to pass all the necessary props.\n *\n * The given props will take precedence over context values.\n *\n * @typedef {Object} ShowControllerProps\n *\n * @returns {ShowControllerProps} create controller props\n *\n * @see useShowController for how it is filled\n *\n */\n\nexport var useShowContext = function useShowContext(props) {\n  // Can't find a way to specify the RecordType when ShowContext is declared\n  // @ts-ignore\n  var context = useContext(ShowContext); // Props take precedence over the context\n\n  return useMemo(function () {\n    return defaults({}, props != null ? extractShowContextProps(props) : {}, context);\n  }, [context, props]);\n};\n/**\n * Extract only the show controller props\n *\n * @param {Object} props props passed to the useShowContext hook\n *\n * @returns {ShowControllerProps} show controller props\n */\n\nvar extractShowContextProps = function extractShowContextProps(_a) {\n  var basePath = _a.basePath,\n      record = _a.record,\n      data = _a.data,\n      defaultTitle = _a.defaultTitle,\n      loaded = _a.loaded,\n      loading = _a.loading,\n      resource = _a.resource,\n      version = _a.version;\n  return {\n    basePath: basePath,\n    // Necessary for actions (EditActions) which expect a data prop containing the record\n    // @deprecated - to be removed in 4.0d\n    record: record || data,\n    data: record || data,\n    defaultTitle: defaultTitle,\n    loaded: loaded,\n    loading: loading,\n    resource: resource,\n    version: version\n  };\n};","map":null,"metadata":{},"sourceType":"module"}