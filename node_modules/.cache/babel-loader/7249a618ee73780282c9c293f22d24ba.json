{"ast":null,"code":"var __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nimport merge from 'lodash/merge';\nimport { DEFAULT_LOCALE } from './index';\n/**\r\n * Resolve the browser locale according to the value of the global window.navigator\r\n *\r\n * Use it to determine the <Admin> locale at runtime.\r\n *\r\n * @example\r\n *     import * as React from \"react\";\r\n *     import { Admin, Resource, resolveBrowserLocale } from 'react-admin';\r\n *     import englishMessages from 'ra-language-english';\r\n *     import frenchMessages from 'ra-language-french';\r\n *     const messages = {\r\n *        fr: frenchMessages,\r\n *        en: englishMessages,\r\n *     };\r\n *     const App = () => (\r\n *         <Admin locale={resolveBrowserLocale()} messages={messages}>\r\n *             ...\r\n *         </Admin>\r\n *     );\r\n *\r\n * @param {string} defaultLocale Defaults to 'en'\r\n */\n\nexport var resolveBrowserLocale = function resolveBrowserLocale(defaultLocale) {\n  if (defaultLocale === void 0) {\n    defaultLocale = DEFAULT_LOCALE;\n  } // from http://blog.ksol.fr/user-locale-detection-browser-javascript/\n  // Rely on the window.navigator object to determine user locale\n\n\n  var _a = window.navigator,\n      language = _a.language,\n      browserLanguage = _a.browserLanguage,\n      userLanguage = _a.userLanguage;\n  return (language || browserLanguage || userLanguage || defaultLocale).split('-')[0];\n};\n/**\r\n * Compose translations from multiple packages for a single language (eg: 'english').\r\n *\r\n * Use it to merge translations from addons with the main react-admin translations.\r\n *\r\n * @example\r\n *     import * as React from \"react\";\r\n *     import { Admin, Resource, mergeTranslations } from 'react-admin';\r\n *     import englishMessages from 'ra-language-english';\r\n *     import englishTreeMessages from 'ra-tree-language-english';\r\n *     const messages = {\r\n *        en: mergeTranslations(englishMessages, englishTreeMessages),\r\n *     };\r\n *     const App = () => (\r\n *         <Admin locale=\"en\" messages={messages}>\r\n *             ...\r\n *         </Admin>\r\n *     );\r\n */\n\nexport var mergeTranslations = function mergeTranslations() {\n  var translationsModules = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    translationsModules[_i] = arguments[_i];\n  }\n\n  return merge.apply(void 0, __spreadArrays([{}], translationsModules));\n};","map":null,"metadata":{},"sourceType":"module"}