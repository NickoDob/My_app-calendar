{"ast":null,"code":"import { useEffect } from 'react';\nimport { useForm } from 'react-final-form';\nimport isEqual from 'lodash/isEqual';\nimport getFormInitialValues from './getFormInitialValues';\n/**\r\n * Restore the record values which should override any default values specified on the form.\r\n */\n\nvar useInitializeFormWithRecord = function useInitializeFormWithRecord(record) {\n  var form = useForm();\n  useEffect(function () {\n    if (!record) {\n      return;\n    }\n\n    var initialValues = getFormInitialValues(form.getState().initialValues, undefined, record);\n\n    if (isEqual(form.getState().initialValues, initialValues)) {\n      return;\n    } // Disable this option when re-initializing the form because in this case, it should reset the dirty state of all fields\n    // We do need to keep this option for dynamically added inputs though which is why it is kept at the form level\n\n\n    form.setConfig('keepDirtyOnReinitialize', false);\n    form.restart(initialValues);\n    form.setConfig('keepDirtyOnReinitialize', true);\n  }, [form, JSON.stringify(record)]); // eslint-disable-line react-hooks/exhaustive-deps\n};\n\nexport default useInitializeFormWithRecord;","map":null,"metadata":{},"sourceType":"module"}