{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport useReferenceArrayFieldController from './useReferenceArrayFieldController';\n/**\r\n * Render prop version of the useReferenceArrayFieldController hook.\r\n *\r\n * @see useReferenceArrayFieldController\r\n */\n\nvar ReferenceArrayFieldController = function ReferenceArrayFieldController(props) {\n  var children = props.children,\n      rest = __rest(props, [\"children\"]);\n\n  var controllerProps = useReferenceArrayFieldController(__assign({\n    sort: {\n      field: 'id',\n      order: 'ASC'\n    }\n  }, rest));\n  return children(controllerProps);\n};\n\nexport default ReferenceArrayFieldController;","map":null,"metadata":{},"sourceType":"module"}