{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport useListController from './useListController';\nimport ListContextProvider from './ListContextProvider';\n/**\r\n * Call useListController and put the value in a ListContext\r\n *\r\n * Base class for <List> components, without UI.\r\n *\r\n * Accepts any props accepted by useListController:\r\n * - filter: permanent filter applied to the list\r\n * - filters: Filter element, to display the filters\r\n * - filterDefaultValues: object;\r\n * - perPage: Number of results per page\r\n * - sort: Default sort\r\n * - exporter: exported function\r\n *\r\n * @example // Custom list layout\r\n *\r\n * const PostList = props => (\r\n *     <ListBase {...props} perPage={10}>\r\n *         <div>\r\n *              List metrics...\r\n *         </div>\r\n *         <Grid container>\r\n *             <Grid item xs={8}>\r\n *                 <SimpleList primaryText={record => record.title} />\r\n *             </Grid>\r\n *             <Grid item xs={4}>\r\n *                 List instructions...\r\n *             </Grid>\r\n *         </Grid>\r\n *         <div>\r\n *             Post related links...\r\n *         </div>\r\n *     </ListBase>\r\n * );\r\n */\n\nvar ListBase = function ListBase(_a) {\n  var children = _a.children,\n      props = __rest(_a, [\"children\"]);\n\n  return React.createElement(ListContextProvider, {\n    value: useListController(props)\n  }, children);\n};\n\nexport default ListBase;","map":null,"metadata":{},"sourceType":"module"}