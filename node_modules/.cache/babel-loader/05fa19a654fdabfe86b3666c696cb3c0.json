{"ast":null,"code":"import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { showNotification } from '../actions/notificationActions';\n/**\r\n * Hook for Notification Side Effect\r\n *\r\n * @example\r\n *\r\n * const notify = useNotify();\r\n * // simple message (info level)\r\n * notify('Level complete');\r\n * // specify level\r\n * notify('A problem occurred', 'warning')\r\n * // pass arguments to the translation function\r\n * notify('Deleted %{count} elements', 'info', { smart_count: 23 })\r\n * // show the action as undoable in the notification\r\n * notify('Post renamed', 'info', {}, true)\r\n */\n\nvar useNotify = function useNotify() {\n  var dispatch = useDispatch();\n  return useCallback(function (message, type, messageArgs, undoable, autoHideDuration) {\n    if (type === void 0) {\n      type = 'info';\n    }\n\n    if (messageArgs === void 0) {\n      messageArgs = {};\n    }\n\n    if (undoable === void 0) {\n      undoable = false;\n    }\n\n    dispatch(showNotification(message, type, {\n      messageArgs: messageArgs,\n      undoable: undoable,\n      autoHideDuration: autoHideDuration\n    }));\n  }, [dispatch]);\n};\n\nexport default useNotify;","map":null,"metadata":{},"sourceType":"module"}