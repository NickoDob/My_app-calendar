{"ast":null,"code":"import { useEffect } from 'react';\nimport { useRefresh } from '../sideEffect';\nimport useIsAutomaticRefreshEnabled from './useIsAutomaticRefreshEnabled';\n/**\r\n * Trigger a refresh of the page when the page comes back from background after a certain delay\r\n *\r\n * @param {number} delay Delay in milliseconds since the time the page was hidden. Defaults to 5 minutes.\r\n */\n\nvar useRefreshWhenVisible = function useRefreshWhenVisible(delay) {\n  if (delay === void 0) {\n    delay = 1000 * 60 * 5;\n  }\n\n  var refresh = useRefresh();\n  var automaticRefreshEnabled = useIsAutomaticRefreshEnabled();\n  useEffect(function () {\n    if (typeof document === 'undefined') return;\n    var lastHiddenTime;\n\n    var handleVisibilityChange = function handleVisibilityChange() {\n      if (!automaticRefreshEnabled) {\n        return;\n      }\n\n      if (document.hidden) {\n        // tab goes hidden\n        lastHiddenTime = Date.now();\n      } else {\n        // tab goes visible\n        if (Date.now() - lastHiddenTime > delay) {\n          refresh();\n        }\n\n        lastHiddenTime = null;\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange, {\n      capture: true\n    });\n    return function () {\n      return document.removeEventListener('visibilitychange', handleVisibilityChange, {\n        capture: true\n      });\n    };\n  }, [automaticRefreshEnabled, delay, refresh]);\n};\n\nexport default useRefreshWhenVisible;","map":null,"metadata":{},"sourceType":"module"}