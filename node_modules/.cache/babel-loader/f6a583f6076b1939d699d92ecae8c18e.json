{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormGroupContextProvider } from 'ra-core';\nimport FormInput from './FormInput';\nimport { FormTabHeader } from './FormTabHeader';\nvar hiddenStyle = {\n  display: 'none'\n};\nexport var FormTab = function FormTab(_a) {\n  var basePath = _a.basePath,\n      className = _a.className,\n      classes = _a.classes,\n      contentClassName = _a.contentClassName,\n      children = _a.children,\n      hidden = _a.hidden,\n      icon = _a.icon,\n      intent = _a.intent,\n      label = _a.label,\n      margin = _a.margin,\n      path = _a.path,\n      record = _a.record,\n      resource = _a.resource,\n      variant = _a.variant,\n      value = _a.value,\n      rest = __rest(_a, [\"basePath\", \"className\", \"classes\", \"contentClassName\", \"children\", \"hidden\", \"icon\", \"intent\", \"label\", \"margin\", \"path\", \"record\", \"resource\", \"variant\", \"value\"]);\n\n  var renderHeader = function renderHeader() {\n    return React.createElement(FormTabHeader, __assign({\n      label: label,\n      value: value,\n      icon: icon,\n      className: className,\n      classes: classes\n    }, rest));\n  };\n\n  var renderContent = function renderContent() {\n    return React.createElement(FormGroupContextProvider, {\n      name: value.toString()\n    }, React.createElement(\"span\", {\n      style: hidden ? hiddenStyle : null,\n      className: contentClassName,\n      id: \"tabpanel-\" + value,\n      \"aria-labelledby\": \"tabheader-\" + value,\n      \"aria-hidden\": hidden || undefined\n    }, React.Children.map(children, function (input) {\n      return input && React.createElement(FormInput, {\n        basePath: basePath,\n        input: input,\n        record: record,\n        resource: resource,\n        variant: input.props.variant || variant,\n        margin: input.props.margin || margin\n      });\n    })));\n  };\n\n  return intent === 'header' ? renderHeader() : renderContent();\n};\nFormTab.propTypes = {\n  basePath: PropTypes.string,\n  className: PropTypes.string,\n  contentClassName: PropTypes.string,\n  children: PropTypes.node,\n  intent: PropTypes.oneOf(['header', 'content']),\n  hidden: PropTypes.bool,\n  icon: PropTypes.element,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n  path: PropTypes.string,\n  // @ts-ignore\n  record: PropTypes.object,\n  resource: PropTypes.string,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n};\nFormTab.displayName = 'FormTab';","map":null,"metadata":{},"sourceType":"module"}