{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\src\\\\Alarm.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Alarm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentTime: '',\n      alarmTime: ''\n    };\n    this.setAlarmTime = this.setAlarmTime.bind(this);\n  }\n\n  componentDidMount() {\n    this.clock = setInterval(() => this.setCurrentTime(), 1000);\n    this.interval = setInterval(() => this.checkAlarmClock(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clock);\n    clearInterval(this.interval);\n  }\n\n  setCurrentTime() {\n    this.setState({\n      currentTime: new Date().toLocaleTimeString('en-US', {\n        hour12: false\n      })\n    });\n  }\n\n  setAlarmTime(event) {\n    event.preventDefault();\n    const inputAlarmTimeModified = event.target.value + ':00';\n    this.setState({\n      alarmTime: inputAlarmTimeModified\n    });\n  }\n\n  checkAlarmClock() {\n    if (this.state.alarmTime == 'undefined' || !this.state.alarmTime) {\n      this.alarmMessage = \"Please set your alarm.\";\n    } else {\n      this.alarmMessage = \"Your alarm is set for \" + this.state.alarmTime + \".\";\n\n      if (this.state.currentTime === this.state.alarmTime) {\n        alert(\"its time!\");\n      } else {\n        console.log(\"not yet\");\n      }\n    }\n  }\n\n  handleSelect1() {\n    const [alarmList, setAlarmList] = [];\n    const title1 = window.prompt(\"New Alarm time\");\n\n    if (title1) {\n      var newAlarm = this.setAlarmTime;\n      setAlarmList([...alarmList, newAlarm]);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Alarm, {\n        message: this.alarmMessage,\n        alarmList: true,\n        style: {\n          height: 500\n        },\n        handleSelect1: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Alarm;","map":{"version":3,"sources":["C:/Users/kolya/IdeaProjects/my-app2/src/Alarm.js"],"names":["React","useState","Alarm","Component","constructor","state","currentTime","alarmTime","setAlarmTime","bind","componentDidMount","clock","setInterval","setCurrentTime","interval","checkAlarmClock","componentWillUnmount","clearInterval","setState","Date","toLocaleTimeString","hour12","event","preventDefault","inputAlarmTimeModified","target","value","alarmMessage","alert","console","log","handleSelect1","alarmList","setAlarmList","title1","window","prompt","newAlarm","render","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAmC;AACjCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,GAAaC,WAAW,CACtB,MAAM,KAAKC,cAAL,EADgB,EAEtB,IAFsB,CAAxB;AAIA,SAAKC,QAAL,GAAgBF,WAAW,CACzB,MAAM,KAAKG,eAAL,EADmB,EAE3B,IAF2B,CAA3B;AAGD;;AAEDC,EAAAA,oBAAoB,GAAE;AACpBC,IAAAA,aAAa,CAAC,KAAKN,KAAN,CAAb;AACAM,IAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACD;;AAEDD,EAAAA,cAAc,GAAE;AACd,SAAKK,QAAL,CAAc;AACZZ,MAAAA,WAAW,EAAE,IAAIa,IAAJ,GAAWC,kBAAX,CAA8B,OAA9B,EAAuC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAvC;AADD,KAAd;AAGD;;AAEDb,EAAAA,YAAY,CAACc,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,sBAAsB,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAAb,GAAqB,KAApD;AACA,SAAKR,QAAL,CAAc;AACZX,MAAAA,SAAS,EAAEiB;AADC,KAAd;AAGD;;AAEDT,EAAAA,eAAe,GAAE;AACf,QAAG,KAAKV,KAAL,CAAWE,SAAX,IAAwB,WAAxB,IAAuC,CAAC,KAAKF,KAAL,CAAWE,SAAtD,EAAiE;AAC/D,WAAKoB,YAAL,GAAoB,wBAApB;AACD,KAFD,MAEO;AACL,WAAKA,YAAL,GAAoB,2BAA2B,KAAKtB,KAAL,CAAWE,SAAtC,GAAkD,GAAtE;;AACA,UAAG,KAAKF,KAAL,CAAWC,WAAX,KAA2B,KAAKD,KAAL,CAAWE,SAAzC,EAAoD;AAClDqB,QAAAA,KAAK,CAAC,WAAD,CAAL;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;AACF;AACF;;AAIDC,EAAAA,aAAa,GAAG;AACX,UAAM,CAACC,SAAD,EAAYC,YAAZ,IAA6B,EAAnC;AACA,UAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,gBAAd,CAAf;;AACA,QAAIF,MAAJ,EAAY;AACZ,UAAIG,QAAQ,GAAG,KAAK7B,YAApB;AAEDyB,MAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeK,QAAf,CAAD,CAAZ;AACF;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACA,QAAC,KAAD;AACE,QAAA,OAAO,EAAE,KAAKX,YADhB;AAEE,QAAA,SAAS,MAFX;AAGE,QAAA,KAAK,EAAE;AAAEY,UAAAA,MAAM,EAAE;AAAV,SAHT;AAIE,QAAA,aAAa;AAJf;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA3EgC;;AA6ElC,eAAerC,KAAf","sourcesContent":["import React, { useState  } from 'react';\r\n\r\nclass Alarm extends React.Component{\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      currentTime: '',\r\n      alarmTime: ''\r\n    };\r\n    this.setAlarmTime = this.setAlarmTime.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.clock = setInterval(\r\n      () => this.setCurrentTime(),\r\n      1000\r\n    )\r\n    this.interval = setInterval(\r\n      () => this.checkAlarmClock(),\r\n    1000)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(this.clock);\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  setCurrentTime(){\r\n    this.setState({\r\n      currentTime: new Date().toLocaleTimeString('en-US', { hour12: false })\r\n    });\r\n  }\r\n\r\n  setAlarmTime(event) {\r\n    event.preventDefault();\r\n    const inputAlarmTimeModified = event.target.value + ':00'\r\n    this.setState({\r\n      alarmTime: inputAlarmTimeModified\r\n    })\r\n  }\r\n\r\n  checkAlarmClock(){\r\n    if(this.state.alarmTime == 'undefined' || !this.state.alarmTime) {\r\n      this.alarmMessage = \"Please set your alarm.\";\r\n    } else {\r\n      this.alarmMessage = \"Your alarm is set for \" + this.state.alarmTime + \".\";\r\n      if(this.state.currentTime === this.state.alarmTime) {\r\n        alert(\"its time!\");\r\n      } else {\r\n        console.log(\"not yet\");\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  handleSelect1() {\r\n       const [alarmList, setAlarmList] = ([]);\r\n       const title1 = window.prompt(\"New Alarm time\");\r\n       if (title1) {\r\n       var newAlarm = this.setAlarmTime\r\n\r\n      setAlarmList([...alarmList, newAlarm]);\r\n   }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      <Alarm\r\n        message={this.alarmMessage}\r\n        alarmList\r\n        style={{ height: 500 }}\r\n        handleSelect1\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n export default Alarm;"]},"metadata":{},"sourceType":"module"}