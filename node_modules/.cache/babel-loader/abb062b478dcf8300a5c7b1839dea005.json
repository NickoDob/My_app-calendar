{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\src\\\\MyCalendar.js\";\nimport React, { useState, Component } from 'react';\nimport ReactDOM from \"react-dom\";\nimport './App.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'moment/locale/ru';\nimport { Alert, useAlert } from 'react-alert';\n\nfunction MyCalendar() {\n  var localizer = momentLocalizer(moment);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      eventsList = _useState2[0],\n      setEventsList = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alarmsList = _useState4[0],\n      setAlarmsList = _useState4[1];\n\n  function handleSelect(_ref) {\n    var start = _ref.start,\n        end = _ref.end;\n    var title = window.prompt(\"New Event name\");\n\n    if (title) {\n      var newEvent = {\n        start: start,\n        end: end,\n        title: title,\n        alarmTime1: '10:52:30'\n      };\n      setEventsList([].concat(_toConsumableArray(eventsList), [newEvent]));\n    }\n  }\n\n  ;\n\n  function Alarm() {\n    var state = {\n      currentTime: '',\n      alarmTime: handleSelect.newEvent.alarmTime1\n    };\n\n    function componentDidMount() {\n      var _this = this;\n\n      this.clock = setInterval(function () {\n        return _this.setState({\n          currentTime: new Date().toLocaleTimeString('ru', {\n            hour12: false\n          })\n        });\n      }, 1000);\n      this.interval = setInterval(function () {\n        return _this.checkAlarmClock();\n      }, 1000);\n    }\n\n    function checkAlarmClock() {\n      if (state.currentTime === state.alarmTime) {\n        alert(\"its time!\");\n      } else {\n        console.log(\"not yet\");\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    messages: {\n      next: 'Следущий',\n      previous: 'Предыдущий',\n      today: 'Сегодня',\n      month: 'Месяц',\n      week: 'Неделя',\n      day: 'День',\n      yesterday: 'Вчера',\n      tomorrow: 'Завтра',\n      agenda: 'Мероприятия',\n      noEventsInRange: 'Не найдено никаких мероприятий в текущем периоде.',\n      showMore: function showMore(total) {\n        return '+' + total + 'событий';\n      }\n    },\n    selectable: true,\n    defaultView: \"week\",\n    defaultDate: new Date(),\n    localizer: localizer,\n    events: eventsList,\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    style: {\n      height: 500\n    },\n    onSelectSlot: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default MyCalendar;","map":{"version":3,"sources":["C:/Users/kolya/IdeaProjects/my-app2/src/MyCalendar.js"],"names":["React","useState","Component","ReactDOM","Calendar","momentLocalizer","moment","Alert","useAlert","MyCalendar","localizer","eventsList","setEventsList","alarmsList","setAlarmsList","handleSelect","start","end","title","window","prompt","newEvent","alarmTime1","Alarm","state","currentTime","alarmTime","componentDidMount","clock","setInterval","setState","Date","toLocaleTimeString","hour12","interval","checkAlarmClock","alert","console","log","next","previous","today","month","week","day","yesterday","tomorrow","agenda","noEventsInRange","showMore","total","height"],"mappings":"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","sourcesContent":["import React, { useState, Component  } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport './App.css';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'moment/locale/ru'\r\nimport { Alert, useAlert } from 'react-alert'\r\n\r\nfunction MyCalendar()  {\r\n\r\n    const localizer = momentLocalizer(moment);\r\n    const [eventsList, setEventsList] = useState([]);\r\n    const [alarmsList, setAlarmsList] = useState([]);\r\n\r\n\r\n    function handleSelect({ start, end }) {\r\n        const title = window.prompt(\"New Event name\");\r\n        if (title) {\r\n          var newEvent = {\r\n            start: start,\r\n            end: end,\r\n            title: title,\r\n            alarmTime1: '10:52:30',\r\n          };\r\n          setEventsList([...eventsList, newEvent]);\r\n        }\r\n      };\r\n\r\n    function Alarm() {\r\n        var state = {\r\n          currentTime: '',\r\n          alarmTime: handleSelect.newEvent.alarmTime1,\r\n        };\r\n\r\n      function componentDidMount(){\r\n        this.clock = setInterval(() => this.setState({\r\n                               currentTime: new Date().toLocaleTimeString('ru', { hour12: false })\r\n                             }), 1000)\r\n            this.interval = setInterval(\r\n              () => this.checkAlarmClock(), 1000)\r\n      }\r\n\r\n      function checkAlarmClock(){\r\n          if(state.currentTime === state.alarmTime) {\r\n            alert(\"its time!\");\r\n          } else {\r\n            console.log(\"not yet\");\r\n          }\r\n        }\r\n        }\r\n\r\n    return (\r\n        <div>\r\n        <Calendar\r\n        messages={{\r\n                  next: 'Следущий',\r\n                  previous: 'Предыдущий',\r\n                  today: 'Сегодня',\r\n                  month: 'Месяц',\r\n                  week: 'Неделя',\r\n                  day: 'День',\r\n                  yesterday: 'Вчера',\r\n                  tomorrow: 'Завтра',\r\n                  agenda: 'Мероприятия',\r\n                  noEventsInRange: 'Не найдено никаких мероприятий в текущем периоде.',\r\n\r\n                  showMore: function showMore(total) {\r\n                    return '+' + total + 'событий';\r\n                  }\r\n        }}\r\n        selectable\r\n\r\n        defaultView=\"week\"\r\n        defaultDate={new Date()}\r\n        localizer={localizer}\r\n        events={eventsList}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: 500 }}\r\n        onSelectSlot={handleSelect}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}