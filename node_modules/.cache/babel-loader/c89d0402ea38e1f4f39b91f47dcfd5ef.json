{"ast":null,"code":"import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchStart, fetchEnd } from '../actions/fetchActions';\n/**\r\n * Update the loading count, which starts or stops the loading indicator.\r\n *\r\n * To be used to show the loading indicator when you don't use the dataProvider.\r\n *\r\n * @return {Object} startLoading and stopLoading callbacks\r\n *\r\n * @example\r\n * import { useUpdateLoading } from 'react-admin'\r\n *\r\n * const MyComponent = () => {\r\n *      const { startLoading, stopLoading } = useUpdateLoading();\r\n *      useEffect(() => {\r\n *          startLoading();\r\n *          fetch('http://my.domain.api/foo')\r\n *              .finally(() => stopLoading());\r\n *      }, []);\r\n *      return <span>Foo</span>;\r\n * }\r\n */\n\nexport default (function () {\n  var dispatch = useDispatch();\n  var startLoading = useCallback(function () {\n    dispatch(fetchStart());\n  }, [dispatch]);\n  var stopLoading = useCallback(function () {\n    dispatch(fetchEnd());\n  }, [dispatch]);\n  return {\n    startLoading: startLoading,\n    stopLoading: stopLoading\n  };\n});","map":null,"metadata":{},"sourceType":"module"}