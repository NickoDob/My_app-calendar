{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useRecordContext } from 'ra-core';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\n/**\r\n * Field using a render function\r\n *\r\n * @example\r\n * <FunctionField\r\n *     source=\"last_name\" // used for sorting\r\n *     label=\"Name\"\r\n *     render={record => record && `${record.first_name} ${record.last_name}`}\r\n * />\r\n */\n\nvar FunctionField = function FunctionField(props) {\n  var className = props.className,\n      _a = props.source,\n      source = _a === void 0 ? '' : _a,\n      render = props.render,\n      rest = __rest(props, [\"className\", \"source\", \"render\"]);\n\n  var record = useRecordContext(props);\n  return useMemo(function () {\n    return record ? React.createElement(Typography, __assign({\n      component: \"span\",\n      variant: \"body2\",\n      className: className\n    }, sanitizeFieldRestProps(rest)), render(record, source)) : null;\n  }, [className, record, source, render, rest]);\n};\n\nFunctionField.defaultProps = {\n  addLabel: true\n};\nFunctionField.propTypes = __assign(__assign(__assign({}, Typography.propTypes), fieldPropTypes), {\n  render: PropTypes.func.isRequired\n});\nexport default FunctionField;","map":null,"metadata":{},"sourceType":"module"}