{"ast":null,"code":"import * as React from 'react';\nimport { RecordContextProvider } from '../RecordContext';\nimport { EditContext } from './EditContext';\nimport { SaveContextProvider, usePickSaveContext } from './SaveContext';\n/**\r\n * Create an Edit Context.\r\n *\r\n * @example\r\n *\r\n * const MyEdit = (props) => {\r\n *     const controllerProps = useEditController(props);\r\n *     return (\r\n *         <EditContextProvider value={controllerProps}>\r\n *             <MyEditView>\r\n *         </EditContextProvider>\r\n *     );\r\n * };\r\n *\r\n * const MyEditView = () => {\r\n *     const record = useRecordContext();\r\n *     // or, to rerender only when the save operation change but not data\r\n *     const { saving } = useEditContext();\r\n * }\r\n *\r\n * @see EditContext\r\n * @see RecordContext\r\n */\n\nexport var EditContextProvider = function EditContextProvider(_a) {\n  var children = _a.children,\n      value = _a.value;\n  return React.createElement(EditContext.Provider, {\n    value: value\n  }, React.createElement(SaveContextProvider, {\n    value: usePickSaveContext(value)\n  }, React.createElement(RecordContextProvider, {\n    value: value && value.record\n  }, children)));\n};","map":null,"metadata":{},"sourceType":"module"}