{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport Typography from '@material-ui/core/Typography';\nimport { useRecordContext } from 'ra-core';\nimport sanitizeFieldRestProps from './sanitizeFieldRestProps';\nimport { fieldPropTypes } from './types';\nexport var removeTags = function removeTags(input) {\n  return input ? input.replace(/<[^>]+>/gm, '') : '';\n};\nvar RichTextField = memo(function (props) {\n  var className = props.className,\n      emptyText = props.emptyText,\n      source = props.source,\n      stripTags = props.stripTags,\n      rest = __rest(props, [\"className\", \"emptyText\", \"source\", \"stripTags\"]);\n\n  var record = useRecordContext(props);\n  var value = get(record, source);\n  return React.createElement(Typography, __assign({\n    className: className,\n    variant: \"body2\",\n    component: \"span\"\n  }, sanitizeFieldRestProps(rest)), value == null && emptyText ? emptyText : stripTags ? removeTags(value) : React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: value\n    }\n  }));\n});\nRichTextField.defaultProps = {\n  addLabel: true,\n  stripTags: false\n};\nRichTextField.propTypes = __assign(__assign(__assign({}, Typography.propTypes), fieldPropTypes), {\n  stripTags: PropTypes.bool\n});\nRichTextField.displayName = 'RichTextField';\nexport default RichTextField;","map":null,"metadata":{},"sourceType":"module"}