{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\src\\\\MyCalendar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'moment/locale/ru';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Alarm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentTime: ''\n    };\n    this.setAlarmTime = this.setAlarmTime.bind(this);\n  }\n\n  componentDidMount() {\n    this.clock = setInterval(() => this.setCurrentTime(), 1000);\n    this.interval = setInterval(() => this.checkAlarmClock(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clock);\n    clearInterval(this.interval);\n  }\n\n  setCurrentTime() {\n    this.setState({\n      currentTime: new Date().toLocaleTimeString('ru', {\n        hour12: false\n      })\n    });\n  }\n\n  setAlarmTime(event) {\n    event.preventDefault();\n    const inputAlarmTimeModified = event.target.value;\n    this.setState({\n      alarmTime: inputAlarmTimeModified\n    });\n  }\n\n  checkAlarmClock() {\n    if (this.state.currentTime === this.state.alarmTime) {\n      alert(\"its time!\");\n    } else {\n      console.log(\"not yet\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.alarmMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport function MyCalendar() {\n  _s();\n\n  const localizer = momentLocalizer(moment);\n  const [eventsList, setEventsList] = useState([]);\n\n  function handleSelect({\n    start,\n    end\n  }) {\n    const title = window.prompt(\"New Event name\");\n\n    if (title) {\n      var newEvent = {\n        start: start,\n        end: end,\n        alarmTime: start,\n        title: title\n      };\n      setEventsList([...eventsList, newEvent]);\n    }\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      messages: {\n        next: 'Следущий',\n        previous: 'Предыдущий',\n        today: 'Сегодня',\n        month: 'Месяц',\n        week: 'Неделя',\n        day: 'День',\n        yesterday: 'Вчера',\n        tomorrow: 'Завтра',\n        agenda: 'Мероприятия',\n        noEventsInRange: 'Не найдено никаких мероприятий в текущем периоде.',\n        showMore: function showMore(total) {\n          return '+' + total + 'событий';\n        }\n      },\n      selectable: true,\n      defaultView: \"week\",\n      defaultDate: new Date(),\n      localizer: localizer,\n      events: eventsList,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      style: {\n        height: 500\n      },\n      onSelectSlot: handleSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MyCalendar, \"vxm730YjTDNsmEX0VmoEbz8kBBk=\");\n\n_c = MyCalendar;\nexport default MyCalendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyCalendar\");","map":{"version":3,"sources":["C:/Users/kolya/IdeaProjects/my-app2/src/MyCalendar.js"],"names":["React","useState","Calendar","momentLocalizer","moment","Alarm","Component","constructor","state","currentTime","setAlarmTime","bind","componentDidMount","clock","setInterval","setCurrentTime","interval","checkAlarmClock","componentWillUnmount","clearInterval","setState","Date","toLocaleTimeString","hour12","event","preventDefault","inputAlarmTimeModified","target","value","alarmTime","alert","console","log","render","alarmMessage","MyCalendar","localizer","eventsList","setEventsList","handleSelect","start","end","title","window","prompt","newEvent","next","previous","today","month","week","day","yesterday","tomorrow","agenda","noEventsInRange","showMore","total","height"],"mappings":"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","sourcesContent":["import React, { useState  } from 'react';\r\nimport './App.css';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport 'moment/locale/ru'\r\n\r\nclass Alarm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      currentTime: '',\r\n\r\n    };\r\n    this.setAlarmTime = this.setAlarmTime.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.clock = setInterval(\r\n      () => this.setCurrentTime(),\r\n      1000\r\n    )\r\n    this.interval = setInterval(\r\n      () => this.checkAlarmClock(),\r\n    1000)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(this.clock);\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  setCurrentTime(){\r\n    this.setState({\r\n      currentTime: new Date().toLocaleTimeString('ru', { hour12: false })\r\n    });\r\n  }\r\n\r\n  setAlarmTime(event) {\r\n    event.preventDefault();\r\n    const inputAlarmTimeModified = event.target.value\r\n    this.setState({\r\n      alarmTime: inputAlarmTimeModified\r\n    })\r\n  }\r\n\r\n  checkAlarmClock(){\r\n      if(this.state.currentTime === this.state.alarmTime) {\r\n        alert(\"its time!\");\r\n      } else {\r\n        console.log(\"not yet\");\r\n      }\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>{this.alarmMessage}</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport function MyCalendar() {\r\n    const localizer = momentLocalizer(moment)\r\n    const [eventsList, setEventsList] = useState([]);\r\n\r\n\r\n    function handleSelect({ start, end }) {\r\n        const title = window.prompt(\"New Event name\");\r\n        if (title) {\r\n          var newEvent = {\r\n            start: start,\r\n            end: end,\r\n            alarmTime: start,\r\n            title: title,\r\n          };\r\n          setEventsList([...eventsList, newEvent]);\r\n        }\r\n      };\r\n\r\n\r\n    return (\r\n        <div>\r\n        <Calendar\r\n        messages={{\r\n                  next: 'Следущий',\r\n                  previous: 'Предыдущий',\r\n                  today: 'Сегодня',\r\n                  month: 'Месяц',\r\n                  week: 'Неделя',\r\n                  day: 'День',\r\n                  yesterday: 'Вчера',\r\n                  tomorrow: 'Завтра',\r\n                  agenda: 'Мероприятия',\r\n                  noEventsInRange: 'Не найдено никаких мероприятий в текущем периоде.',\r\n\r\n                  showMore: function showMore(total) {\r\n                    return '+' + total + 'событий';\r\n                  }\r\n        }}\r\n        selectable\r\n        defaultView=\"week\"\r\n        defaultDate={new Date()}\r\n        localizer={localizer}\r\n        events={eventsList}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: 500 }}\r\n        onSelectSlot={handleSelect}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyCalendar;"]},"metadata":{},"sourceType":"module"}