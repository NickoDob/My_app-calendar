{"ast":null,"code":"import { useMemo } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport { setListSelectedIds, toggleListItem } from '../actions/listActions';\nvar defaultRecords = [];\n/**\r\n * Get the list of selected items for a resource, and callbacks to change the selection\r\n *\r\n * @param resource The resource name, e.g. 'posts'\r\n *\r\n * @returns {Object} Destructure as [selectedIds, { select, toggle, clearSelection }].\r\n */\n\nvar useRecordSelection = function useRecordSelection(resource) {\n  var dispatch = useDispatch();\n  var selectedIds = useSelector(function (reduxState) {\n    return reduxState.admin.resources[resource] ? reduxState.admin.resources[resource].list.selectedIds : defaultRecords;\n  }, shallowEqual);\n  var selectionModifiers = useMemo(function () {\n    return {\n      select: function select(newIds) {\n        dispatch(setListSelectedIds(resource, newIds));\n      },\n      toggle: function toggle(id) {\n        dispatch(toggleListItem(resource, id));\n      },\n      clearSelection: function clearSelection() {\n        dispatch(setListSelectedIds(resource, []));\n      }\n    };\n  }, [dispatch, resource]);\n  return [selectedIds, selectionModifiers];\n};\n\nexport default useRecordSelection;","map":null,"metadata":{},"sourceType":"module"}