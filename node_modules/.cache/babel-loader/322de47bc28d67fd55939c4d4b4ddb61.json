{"ast":null,"code":"import { createContext } from 'react';\n/**\n * Context to store the result of the useEditController() hook.\n *\n * Use the useEditContext() hook to read the context. That's what the Edit components do in react-admin.\n *\n * @example\n *\n * import { useEditController, EditContextProvider } from 'ra-core';\n *\n * const Edit = props => {\n *     const controllerProps = useEditController(props);\n *     return (\n *         <EditContextProvider value={controllerProps}>\n *             ...\n *         </EditContextProvider>\n *     );\n * };\n */\n\nexport var EditContext = createContext({\n  basePath: null,\n  record: null,\n  defaultTitle: null,\n  loaded: null,\n  loading: null,\n  onFailureRef: null,\n  onSuccessRef: null,\n  transformRef: null,\n  redirect: null,\n  setOnFailure: null,\n  setOnSuccess: null,\n  setTransform: null,\n  refetch: null,\n  resource: null,\n  save: null,\n  saving: null,\n  successMessage: null,\n  version: null\n});\nEditContext.displayName = 'EditContext';","map":null,"metadata":{},"sourceType":"module"}