{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\src\\\\Alarm.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alarm() {\n  function constructor() {\n    this.state = {\n      currentTime: '',\n      alarmTime: '17:53:00'\n    };\n    this.setAlarmTime = this.setAlarmTime.bind(this);\n  }\n\n  function componentDidMount() {\n    this.clock = setInterval(() => this.setCurrentTime(), 1000);\n    this.interval = setInterval(() => this.checkAlarmClock(), 1000);\n  }\n\n  function componentWillUnmount() {\n    clearInterval(this.clock);\n    clearInterval(this.interval);\n  }\n\n  function setCurrentTime() {\n    this.setState({\n      currentTime: new Date().toLocaleTimeString('ru', {\n        hour12: false\n      })\n    });\n  }\n\n  function setAlarmTime(event) {\n    event.preventDefault();\n    const inputAlarmTimeModified = event.target.value;\n    this.setState({\n      alarmTime: inputAlarmTimeModified\n    });\n  }\n\n  function checkAlarmClock() {\n    if (this.state.currentTime === this.state.alarmTime) {\n      alert(\"its time!\");\n    } else {\n      console.log(\"not yet\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"this.alarmMessage\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n\n_c = Alarm;\nexport default Alarm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alarm\");","map":{"version":3,"sources":["C:/Users/kolya/IdeaProjects/my-app2/src/Alarm.js"],"names":["React","useState","Alarm","constructor","state","currentTime","alarmTime","setAlarmTime","bind","componentDidMount","clock","setInterval","setCurrentTime","interval","checkAlarmClock","componentWillUnmount","clearInterval","setState","Date","toLocaleTimeString","hour12","event","preventDefault","inputAlarmTimeModified","target","value","alert","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;;;AAEA,SAASC,KAAT,GAAkB;AAChB,WAASC,WAAT,GAAuB;AAErB,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAED,WAASC,iBAAT,GAA4B;AAC1B,SAAKC,KAAL,GAAaC,WAAW,CACtB,MAAM,KAAKC,cAAL,EADgB,EAEtB,IAFsB,CAAxB;AAIA,SAAKC,QAAL,GAAgBF,WAAW,CACzB,MAAM,KAAKG,eAAL,EADmB,EAE3B,IAF2B,CAA3B;AAGD;;AAED,WAASC,oBAAT,GAA+B;AAC7BC,IAAAA,aAAa,CAAC,KAAKN,KAAN,CAAb;AACAM,IAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACD;;AAED,WAASD,cAAT,GAAyB;AACvB,SAAKK,QAAL,CAAc;AACZZ,MAAAA,WAAW,EAAE,IAAIa,IAAJ,GAAWC,kBAAX,CAA8B,IAA9B,EAAoC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAApC;AADD,KAAd;AAGD;;AAED,WAASb,YAAT,CAAsBc,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,sBAAsB,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAA5C;AACA,SAAKR,QAAL,CAAc;AACZX,MAAAA,SAAS,EAAEiB;AADC,KAAd;AAGD;;AAED,WAAST,eAAT,GAA0B;AACtB,QAAG,KAAKV,KAAL,CAAWC,WAAX,KAA2B,KAAKD,KAAL,CAAWE,SAAzC,EAAoD;AAClDoB,MAAAA,KAAK,CAAC,WAAD,CAAL;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;AACF;;AAGD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KArDM1B,K;AAuDR,eAAeA,KAAf","sourcesContent":["import React, { useState  } from 'react';\r\n\r\nfunction Alarm () {\r\n  function constructor() {\r\n\r\n    this.state = {\r\n      currentTime: '',\r\n      alarmTime: '17:53:00'\r\n    };\r\n    this.setAlarmTime = this.setAlarmTime.bind(this);\r\n  }\r\n\r\n  function componentDidMount(){\r\n    this.clock = setInterval(\r\n      () => this.setCurrentTime(),\r\n      1000\r\n    )\r\n    this.interval = setInterval(\r\n      () => this.checkAlarmClock(),\r\n    1000)\r\n  }\r\n\r\n  function componentWillUnmount(){\r\n    clearInterval(this.clock);\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  function setCurrentTime(){\r\n    this.setState({\r\n      currentTime: new Date().toLocaleTimeString('ru', { hour12: false })\r\n    });\r\n  }\r\n\r\n  function setAlarmTime(event) {\r\n    event.preventDefault();\r\n    const inputAlarmTimeModified = event.target.value\r\n    this.setState({\r\n      alarmTime: inputAlarmTimeModified\r\n    })\r\n  }\r\n\r\n  function checkAlarmClock(){\r\n      if(this.state.currentTime === this.state.alarmTime) {\r\n        alert(\"its time!\");\r\n      } else {\r\n        console.log(\"not yet\");\r\n      }\r\n    }\r\n\r\n\r\n    return (\r\n      <div>\r\n        this.alarmMessage\r\n      </div>\r\n    );\r\n  }\r\n\r\n export default Alarm;"]},"metadata":{},"sourceType":"module"}