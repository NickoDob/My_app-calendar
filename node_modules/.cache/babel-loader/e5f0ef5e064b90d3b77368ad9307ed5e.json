{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { memo, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Fab, useMediaQuery } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ContentAdd from '@material-ui/icons/Add';\nimport classnames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { useTranslate, useResourceContext } from 'ra-core';\nimport Button, { sanitizeButtonRestProps } from './Button';\n/**\r\n * Opens the Create view of a given resource\r\n *\r\n * Renders as a regular button on desktop, and a Floating Action Button\r\n * on mobile.\r\n *\r\n * @example // basic usage\r\n * import { CreateButton } from 'react-admin';\r\n *\r\n * const CommentCreateButton = () => (\r\n *     <CreateButton basePath=\"/comments\" label=\"Create comment\" />\r\n * );\r\n */\n\nvar CreateButton = function CreateButton(props) {\n  var _a = props.basePath,\n      basePath = _a === void 0 ? '' : _a,\n      className = props.className,\n      classesOverride = props.classes,\n      _b = props.icon,\n      icon = _b === void 0 ? defaultIcon : _b,\n      _c = props.label,\n      label = _c === void 0 ? 'ra.action.create' : _c,\n      _d = props.scrollToTop,\n      scrollToTop = _d === void 0 ? true : _d,\n      variant = props.variant,\n      rest = __rest(props, [\"basePath\", \"className\", \"classes\", \"icon\", \"label\", \"scrollToTop\", \"variant\"]);\n\n  var classes = useStyles(props);\n  var translate = useTranslate();\n  var isSmall = useMediaQuery(function (theme) {\n    return theme.breakpoints.down('sm');\n  });\n  var resource = useResourceContext();\n  var location = useMemo(function () {\n    return {\n      pathname: basePath ? basePath + \"/create\" : \"/\" + resource + \"/create\",\n      state: {\n        _scrollToTop: scrollToTop\n      }\n    };\n  }, [basePath, resource, scrollToTop]);\n  return isSmall ? React.createElement(Fab, __assign({\n    component: Link,\n    color: \"primary\",\n    className: classnames(classes.floating, className),\n    to: location,\n    \"aria-label\": label && translate(label)\n  }, sanitizeButtonRestProps(rest)), icon) : React.createElement(Button, __assign({\n    component: Link,\n    to: location,\n    className: className,\n    label: label,\n    variant: variant\n  }, rest), icon);\n};\n\nvar defaultIcon = React.createElement(ContentAdd, null);\nvar useStyles = makeStyles(function (theme) {\n  return {\n    floating: {\n      color: theme.palette.getContrastText(theme.palette.primary.main),\n      margin: 0,\n      top: 'auto',\n      right: 20,\n      bottom: 60,\n      left: 'auto',\n      position: 'fixed',\n      zIndex: 1000\n    }\n  };\n}, {\n  name: 'RaCreateButton'\n});\nCreateButton.propTypes = {\n  basePath: PropTypes.string,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  icon: PropTypes.element,\n  label: PropTypes.string\n};\nexport default memo(CreateButton, function (prevProps, nextProps) {\n  return prevProps.basePath === nextProps.basePath && prevProps.label === nextProps.label && prevProps.translate === nextProps.translate && prevProps.to === nextProps.to && prevProps.disabled === nextProps.disabled;\n});","map":null,"metadata":{},"sourceType":"module"}