{"ast":null,"code":"import { useEffect } from 'react';\nimport useCheckAuth from './useCheckAuth';\nimport { useSafeSetState } from '../util/hooks';\nvar emptyParams = {};\n/**\n * Hook for getting the authentication status\n *\n * Calls the authProvider.checkAuth() method asynchronously.\n *\n * The return value updates according to the authProvider request state:\n *\n * - loading: true just after mount, while the authProvider is being called. false once the authProvider has answered.\n * - loaded: the opposite of loading.\n * - authenticated: true while loading. then true or false depending on the authProvider response.\n *\n * To avoid rendering a component and force waiting for the authProvider response, use the useAuthState() hook\n * instead of the useAuthenticated() hook.\n *\n * You can render different content depending on the authenticated status.\n *\n * @see useAuthenticated()\n *\n * @param {Object} params Any params you want to pass to the authProvider\n *\n * @returns The current auth check state. Destructure as { authenticated, error, loading, loaded }.\n *\n * @example\n * import { useAuthState, Loading } from 'react-admin';\n *\n * const MyPage = () => {\n *     const { loading, authenticated } = useAuthState();\n *     if (loading) {\n *         return <Loading />;\n *     }\n *     if (authenticated) {\n *        return <AuthenticatedContent />;\n *     }\n *     return <AnonymousContent />;\n * };\n */\n\nvar useAuthState = function useAuthState(params) {\n  if (params === void 0) {\n    params = emptyParams;\n  }\n\n  var _a = useSafeSetState({\n    loading: true,\n    loaded: false,\n    authenticated: true\n  }),\n      state = _a[0],\n      setState = _a[1];\n\n  var checkAuth = useCheckAuth();\n  useEffect(function () {\n    checkAuth(params, false).then(function () {\n      return setState({\n        loading: false,\n        loaded: true,\n        authenticated: true\n      });\n    }).catch(function () {\n      return setState({\n        loading: false,\n        loaded: true,\n        authenticated: false\n      });\n    });\n  }, [checkAuth, params, setState]);\n  return state;\n};\n\nexport default useAuthState;","map":null,"metadata":{},"sourceType":"module"}