{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kolya\\\\IdeaProjects\\\\my-app2\\\\src\\\\Alarm.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Alarm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentTime: '',\n      alarmTime: '17:49:30'\n    };\n    this.setAlarmTime = this.setAlarmTime.bind(this);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clock);\n    clearInterval(this.interval);\n  }\n\n  setCurrentTime() {\n    this.setState({\n      currentTime: new Date().toLocaleTimeString('ru', {\n        hour12: false\n      })\n    });\n  }\n\n  setAlarmTime(event) {\n    event.preventDefault();\n    const inputAlarmTimeModified = event.target.value;\n    this.setState({\n      alarmTime: inputAlarmTimeModified\n    });\n  }\n\n  checkAlarmClock() {\n    if (this.state.alarmTime == 'undefined' || !this.state.alarmTime) {\n      this.alarmMessage = \"Please set your alarm.\";\n    } else {\n      this.alarmMessage = \"Your alarm is set for \" + this.state.alarmTime + \".\";\n\n      if (this.state.currentTime === this.state.alarmTime) {\n        alert(\"its time!\");\n      } else {\n        console.log(\"not yet\");\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.alarmMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Alarm;","map":{"version":3,"sources":["C:/Users/kolya/IdeaProjects/my-app2/src/Alarm.js"],"names":["React","useState","Alarm","Component","constructor","state","currentTime","alarmTime","setAlarmTime","bind","componentWillUnmount","clearInterval","clock","interval","setCurrentTime","setState","Date","toLocaleTimeString","hour12","event","preventDefault","inputAlarmTimeModified","target","value","checkAlarmClock","alarmMessage","alert","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,EADF;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAIDC,EAAAA,oBAAoB,GAAE;AACpBC,IAAAA,aAAa,CAAC,KAAKC,KAAN,CAAb;AACAD,IAAAA,aAAa,CAAC,KAAKE,QAAN,CAAb;AACD;;AAEDC,EAAAA,cAAc,GAAE;AACd,SAAKC,QAAL,CAAc;AACZT,MAAAA,WAAW,EAAE,IAAIU,IAAJ,GAAWC,kBAAX,CAA8B,IAA9B,EAAoC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAApC;AADD,KAAd;AAGD;;AAEDV,EAAAA,YAAY,CAACW,KAAD,EAAQ;AAClBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,sBAAsB,GAAGF,KAAK,CAACG,MAAN,CAAaC,KAA5C;AACA,SAAKR,QAAL,CAAc;AACZR,MAAAA,SAAS,EAAEc;AADC,KAAd;AAGD;;AAEDG,EAAAA,eAAe,GAAE;AACf,QAAG,KAAKnB,KAAL,CAAWE,SAAX,IAAwB,WAAxB,IAAuC,CAAC,KAAKF,KAAL,CAAWE,SAAtD,EAAiE;AAC/D,WAAKkB,YAAL,GAAoB,wBAApB;AACD,KAFD,MAEO;AACL,WAAKA,YAAL,GAAoB,2BAA2B,KAAKpB,KAAL,CAAWE,SAAtC,GAAkD,GAAtE;;AACA,UAAG,KAAKF,KAAL,CAAWC,WAAX,KAA2B,KAAKD,KAAL,CAAWE,SAAzC,EAAoD;AAClDmB,QAAAA,KAAK,CAAC,WAAD,CAAL;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;AACF;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE;AAAA,kBAAK,KAAKJ;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAnDiC;;AAqDnC,eAAevB,KAAf","sourcesContent":["import React, { useState  } from 'react';\r\n\r\nclass Alarm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      currentTime: '',\r\n      alarmTime: '17:49:30'\r\n    };\r\n    this.setAlarmTime = this.setAlarmTime.bind(this);\r\n  }\r\n\r\n\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(this.clock);\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  setCurrentTime(){\r\n    this.setState({\r\n      currentTime: new Date().toLocaleTimeString('ru', { hour12: false })\r\n    });\r\n  }\r\n\r\n  setAlarmTime(event) {\r\n    event.preventDefault();\r\n    const inputAlarmTimeModified = event.target.value\r\n    this.setState({\r\n      alarmTime: inputAlarmTimeModified\r\n    })\r\n  }\r\n\r\n  checkAlarmClock(){\r\n    if(this.state.alarmTime == 'undefined' || !this.state.alarmTime) {\r\n      this.alarmMessage = \"Please set your alarm.\";\r\n    } else {\r\n      this.alarmMessage = \"Your alarm is set for \" + this.state.alarmTime + \".\";\r\n      if(this.state.currentTime === this.state.alarmTime) {\r\n        alert(\"its time!\");\r\n      } else {\r\n        console.log(\"not yet\");\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>{this.alarmMessage}\r\n        </h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n export default Alarm;"]},"metadata":{},"sourceType":"module"}