{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { memo, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport ImageEye from '@material-ui/icons/RemoveRedEye';\nimport { Link } from 'react-router-dom';\nimport { linkToRecord, useResourceContext } from 'ra-core';\nimport Button from './Button';\n/**\n * Opens the Show view of a given record\n *\n * @example // basic usage\n * import { ShowButton } from 'react-admin';\n *\n * const CommentShowButton = ({ record }) => (\n *     <ShowButton basePath=\"/comments\" label=\"Show comment\" record={record} />\n * );\n */\n\nvar ShowButton = function ShowButton(_a) {\n  var _b = _a.basePath,\n      basePath = _b === void 0 ? '' : _b,\n      _c = _a.icon,\n      icon = _c === void 0 ? defaultIcon : _c,\n      _d = _a.label,\n      label = _d === void 0 ? 'ra.action.show' : _d,\n      record = _a.record,\n      _e = _a.scrollToTop,\n      scrollToTop = _e === void 0 ? true : _e,\n      rest = __rest(_a, [\"basePath\", \"icon\", \"label\", \"record\", \"scrollToTop\"]);\n\n  var resource = useResourceContext();\n  return React.createElement(Button, __assign({\n    component: Link,\n    to: useMemo(function () {\n      return {\n        pathname: record ? linkToRecord(basePath || \"/\" + resource, record.id) + \"/show\" : '',\n        state: {\n          _scrollToTop: scrollToTop\n        }\n      };\n    }, [basePath, record, resource, scrollToTop]),\n    label: label,\n    onClick: stopPropagation\n  }, rest), icon);\n};\n\nvar defaultIcon = React.createElement(ImageEye, null); // useful to prevent click bubbling in a datagrid with rowClick\n\nvar stopPropagation = function stopPropagation(e) {\n  return e.stopPropagation();\n};\n\nShowButton.propTypes = {\n  basePath: PropTypes.string,\n  icon: PropTypes.element,\n  label: PropTypes.string,\n  record: PropTypes.any,\n  scrollToTop: PropTypes.bool\n};\nvar PureShowButton = memo(ShowButton, function (props, nextProps) {\n  return (props.record && nextProps.record ? props.record.id === nextProps.record.id : props.record == nextProps.record) && // eslint-disable-line eqeqeq\n  props.basePath === nextProps.basePath && props.to === nextProps.to && props.disabled === nextProps.disabled;\n});\nexport default PureShowButton;","map":null,"metadata":{},"sourceType":"module"}