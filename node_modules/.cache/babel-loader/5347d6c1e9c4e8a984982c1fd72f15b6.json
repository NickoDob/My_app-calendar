{"ast":null,"code":"import { useContext } from 'react';\nimport { TranslatableContext } from './TranslatableContext';\n/**\r\n * Gives access to the current TranslatableContext.\r\n *\r\n * @example\r\n * <TranslatableFields\r\n *     selector={<MyLanguageSelector />}\r\n *     locales={['en', 'fr']}\r\n * >\r\n *     <TextField source={getSource('title')} />\r\n * <TranslatableFields>\r\n *\r\n * const MyLanguageSelector = () => {\r\n *     const {\r\n *         locales,\r\n *         selectedLocale,\r\n *         selectLocale,\r\n *     } = useTranslatableContext();\r\n *\r\n *     return (\r\n *         <select onChange={selectLocale}>\r\n *             {locales.map((locale) => (\r\n *                 <option selected={locale.locale === selectedLocale}>\r\n *                     {locale.name}\r\n *                 </option>\r\n *             ))}\r\n *        </select>\r\n *     );\r\n * }\r\n */\n\nexport var useTranslatableContext = function useTranslatableContext() {\n  var context = useContext(TranslatableContext);\n\n  if (!context) {\n    throw new Error('useTranslatableContext must be used inside a TranslatableContextProvider');\n  }\n\n  return context;\n};","map":null,"metadata":{},"sourceType":"module"}