{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n};\n\nimport useDataProvider from './useDataProvider';\nimport { useMemo } from 'react';\nimport useDeclarativeSideEffects from './useDeclarativeSideEffects';\nimport { getDataProviderCallArguments } from './getDataProviderCallArguments';\n/**\r\n * This version of the useDataProvider hook ensure Query and Mutation components are still usable\r\n * with side effects declared as objects.\r\n *\r\n * @deprecated This is for backward compatibility only and will be removed in next major version.\r\n */\n\nvar useDataProviderWithDeclarativeSideEffects = function useDataProviderWithDeclarativeSideEffects() {\n  var dataProvider = useDataProvider();\n  var getSideEffects = useDeclarativeSideEffects(); // @ts-ignore\n\n  var dataProviderProxy = useMemo(function () {\n    return new Proxy(dataProvider, {\n      get: function get(target, name) {\n        if (typeof name === 'symbol') {\n          return;\n        }\n\n        return function () {\n          var args = [];\n\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n\n          var _a = getDataProviderCallArguments(args),\n              resource = _a.resource,\n              payload = _a.payload,\n              allArguments = _a.allArguments,\n              options = _a.options;\n\n          var onSuccess;\n          var onFailure;\n          var finalOptions = options;\n          var finalAllArguments = allArguments;\n\n          if (options && Object.keys(options).some(function (key) {\n            return ['onSuccess', 'onFailure'].includes(key);\n          })) {\n            var sideEffect = getSideEffects(resource, options);\n\n            var ignoreOnSuccess = options.onSuccess,\n                // Used to extract options without onSuccess\n            ignoreOnFailure = options.onFailure,\n                // Used to extract options without onFailure\n            otherOptions = __rest(options, [\"onSuccess\", \"onFailure\"]);\n\n            onSuccess = sideEffect.onSuccess;\n            onFailure = sideEffect.onFailure;\n            finalOptions = otherOptions;\n            finalAllArguments = __spreadArrays(args).slice(0, args.length - 1);\n          }\n\n          try {\n            return target[name.toString()].apply(target, typeof resource === 'string' ? [resource, payload, __assign(__assign({}, finalOptions), {\n              onSuccess: onSuccess,\n              onFailure: onFailure\n            })] : finalAllArguments);\n          } catch (e) {\n            // turn synchronous exceptions (e.g. in parameter preparation)\n            // into async ones, otherwise they'll be lost\n            return Promise.reject(e);\n          }\n        };\n      }\n    });\n  }, [dataProvider, getSideEffects]);\n  return dataProviderProxy;\n};\n\nexport default useDataProviderWithDeclarativeSideEffects;","map":null,"metadata":{},"sourceType":"module"}