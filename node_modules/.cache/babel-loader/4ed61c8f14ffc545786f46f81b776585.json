{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { Children, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport classnames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ComponentPropType, defaultExporter, useListContext, getListControllerProps, useVersion } from 'ra-core';\nimport Title, { TitlePropType } from '../layout/Title';\nimport ListToolbar from './ListToolbar';\nimport DefaultPagination from './pagination/Pagination';\nimport BulkDeleteButton from '../button/BulkDeleteButton';\nimport BulkActionsToolbar from './BulkActionsToolbar';\nimport DefaultActions from './ListActions';\nimport { Empty } from './Empty';\nexport var ListView = function ListView(props) {\n  var actions = props.actions,\n      aside = props.aside,\n      filters = props.filters,\n      bulkActionButtons = props.bulkActionButtons,\n      pagination = props.pagination,\n      children = props.children,\n      className = props.className,\n      classesOverride = props.classes,\n      Content = props.component,\n      _a = props.exporter,\n      exporter = _a === void 0 ? defaultExporter : _a,\n      title = props.title,\n      empty = props.empty,\n      rest = __rest(props, [\"actions\", \"aside\", \"filters\", \"bulkActionButtons\", \"pagination\", \"children\", \"className\", \"classes\", \"component\", \"exporter\", \"title\", \"empty\"]);\n\n  var controllerProps = getListControllerProps(props); // deprecated, to be removed in v4\n\n  var listContext = useListContext(props);\n  var classes = useStyles(props);\n  var defaultTitle = listContext.defaultTitle,\n      total = listContext.total,\n      loaded = listContext.loaded,\n      loading = listContext.loading,\n      filterValues = listContext.filterValues,\n      selectedIds = listContext.selectedIds;\n  var version = useVersion();\n\n  var renderList = function renderList() {\n    var _a;\n\n    return React.createElement(React.Fragment, null, (filters || actions) && React.createElement(ListToolbar, __assign({\n      filters: filters\n    }, controllerProps, {\n      actions: actions,\n      exporter: exporter\n    })), React.createElement(\"div\", {\n      className: classes.main\n    }, React.createElement(Content, {\n      className: classnames(classes.content, (_a = {}, _a[classes.bulkActionsDisplayed] = selectedIds.length > 0, _a)),\n      key: version\n    }, bulkActionButtons !== false && bulkActionButtons && React.createElement(BulkActionsToolbar, __assign({}, controllerProps), bulkActionButtons), children && // @ts-ignore-line\n    cloneElement(Children.only(children), __assign(__assign({}, controllerProps), {\n      hasBulkActions: bulkActionButtons !== false\n    })), pagination && cloneElement(pagination, listContext)), aside && cloneElement(aside, listContext)));\n  };\n\n  var shouldRenderEmptyPage = loaded && !loading && total === 0 && !Object.keys(filterValues).length;\n  return React.createElement(\"div\", __assign({\n    className: classnames('list-page', classes.root, className)\n  }, sanitizeRestProps(rest)), React.createElement(Title, {\n    title: title,\n    defaultTitle: defaultTitle\n  }), shouldRenderEmptyPage && empty !== false ? cloneElement(empty, listContext) : renderList());\n};\nListView.propTypes = {\n  // @ts-ignore-line\n  actions: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n  aside: PropTypes.element,\n  basePath: PropTypes.string,\n  // @ts-ignore-line\n  bulkActionButtons: PropTypes.oneOfType([PropTypes.bool, PropTypes.element]),\n  children: PropTypes.element,\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  component: ComponentPropType,\n  // @ts-ignore-line\n  currentSort: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    order: PropTypes.string.isRequired\n  }),\n  data: PropTypes.any,\n  defaultTitle: PropTypes.string,\n  displayedFilters: PropTypes.object,\n  // @ts-ignore-line\n  exporter: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  filterDefaultValues: PropTypes.object,\n  filters: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)]),\n  filterValues: PropTypes.object,\n  hasCreate: PropTypes.bool,\n  hideFilter: PropTypes.func,\n  ids: PropTypes.array,\n  loading: PropTypes.bool,\n  onSelect: PropTypes.func,\n  onToggleItem: PropTypes.func,\n  onUnselectItems: PropTypes.func,\n  page: PropTypes.number,\n  // @ts-ignore-line\n  pagination: PropTypes.oneOfType([PropTypes.element, PropTypes.bool]),\n  perPage: PropTypes.number,\n  refresh: PropTypes.func,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.array,\n  setFilters: PropTypes.func,\n  setPage: PropTypes.func,\n  setPerPage: PropTypes.func,\n  setSort: PropTypes.func,\n  showFilter: PropTypes.func,\n  title: TitlePropType,\n  total: PropTypes.number,\n  version: PropTypes.number\n};\n\nvar DefaultBulkActionButtons = function DefaultBulkActionButtons(props) {\n  return React.createElement(BulkDeleteButton, __assign({}, props));\n};\n\nListView.defaultProps = {\n  actions: React.createElement(DefaultActions, null),\n  classes: {},\n  component: Card,\n  bulkActionButtons: React.createElement(DefaultBulkActionButtons, null),\n  pagination: React.createElement(DefaultPagination, null),\n  empty: React.createElement(Empty, null)\n};\nvar useStyles = makeStyles(function (theme) {\n  var _a;\n\n  return {\n    root: {},\n    main: {\n      display: 'flex'\n    },\n    content: (_a = {\n      marginTop: 0,\n      transition: theme.transitions.create('margin-top'),\n      position: 'relative',\n      flex: '1 1 auto'\n    }, _a[theme.breakpoints.down('xs')] = {\n      boxShadow: 'none'\n    }, _a.overflow = 'inherit', _a),\n    bulkActionsDisplayed: {\n      marginTop: -theme.spacing(8),\n      transition: theme.transitions.create('margin-top')\n    },\n    actions: {\n      zIndex: 2,\n      display: 'flex',\n      justifyContent: 'flex-end',\n      flexWrap: 'wrap'\n    },\n    noResults: {\n      padding: 20\n    }\n  };\n}, {\n  name: 'RaList'\n});\n\nvar sanitizeRestProps = function sanitizeRestProps(_a) {\n  var _b = _a.basePath,\n      basePath = _b === void 0 ? null : _b,\n      _c = _a.currentSort,\n      currentSort = _c === void 0 ? null : _c,\n      _d = _a.data,\n      data = _d === void 0 ? null : _d,\n      _e = _a.defaultTitle,\n      defaultTitle = _e === void 0 ? null : _e,\n      _f = _a.displayedFilters,\n      displayedFilters = _f === void 0 ? null : _f,\n      _g = _a.filterDefaultValues,\n      filterDefaultValues = _g === void 0 ? null : _g,\n      _h = _a.filterValues,\n      filterValues = _h === void 0 ? null : _h,\n      _j = _a.hasCreate,\n      hasCreate = _j === void 0 ? null : _j,\n      _k = _a.hasEdit,\n      hasEdit = _k === void 0 ? null : _k,\n      _l = _a.hasList,\n      hasList = _l === void 0 ? null : _l,\n      _m = _a.hasShow,\n      hasShow = _m === void 0 ? null : _m,\n      _o = _a.hideFilter,\n      hideFilter = _o === void 0 ? null : _o,\n      _p = _a.history,\n      history = _p === void 0 ? null : _p,\n      _q = _a.ids,\n      ids = _q === void 0 ? null : _q,\n      _r = _a.loading,\n      loading = _r === void 0 ? null : _r,\n      _s = _a.loaded,\n      loaded = _s === void 0 ? null : _s,\n      _t = _a.location,\n      location = _t === void 0 ? null : _t,\n      _u = _a.match,\n      match = _u === void 0 ? null : _u,\n      _v = _a.onSelect,\n      onSelect = _v === void 0 ? null : _v,\n      _w = _a.onToggleItem,\n      onToggleItem = _w === void 0 ? null : _w,\n      _x = _a.onUnselectItems,\n      onUnselectItems = _x === void 0 ? null : _x,\n      _y = _a.options,\n      options = _y === void 0 ? null : _y,\n      _z = _a.page,\n      page = _z === void 0 ? null : _z,\n      _0 = _a.permissions,\n      permissions = _0 === void 0 ? null : _0,\n      _1 = _a.perPage,\n      perPage = _1 === void 0 ? null : _1,\n      _2 = _a.refetch,\n      refetch = _2 === void 0 ? null : _2,\n      _3 = _a.resource,\n      resource = _3 === void 0 ? null : _3,\n      _4 = _a.selectedIds,\n      selectedIds = _4 === void 0 ? null : _4,\n      _5 = _a.setFilters,\n      setFilters = _5 === void 0 ? null : _5,\n      _6 = _a.setPage,\n      setPage = _6 === void 0 ? null : _6,\n      _7 = _a.setPerPage,\n      setPerPage = _7 === void 0 ? null : _7,\n      _8 = _a.setSort,\n      setSort = _8 === void 0 ? null : _8,\n      _9 = _a.showFilter,\n      showFilter = _9 === void 0 ? null : _9,\n      _10 = _a.syncWithLocation,\n      syncWithLocation = _10 === void 0 ? null : _10,\n      _11 = _a.sort,\n      sort = _11 === void 0 ? null : _11,\n      _12 = _a.total,\n      total = _12 === void 0 ? null : _12,\n      rest = __rest(_a, [\"basePath\", \"currentSort\", \"data\", \"defaultTitle\", \"displayedFilters\", \"filterDefaultValues\", \"filterValues\", \"hasCreate\", \"hasEdit\", \"hasList\", \"hasShow\", \"hideFilter\", \"history\", \"ids\", \"loading\", \"loaded\", \"location\", \"match\", \"onSelect\", \"onToggleItem\", \"onUnselectItems\", \"options\", \"page\", \"permissions\", \"perPage\", \"refetch\", \"resource\", \"selectedIds\", \"setFilters\", \"setPage\", \"setPerPage\", \"setSort\", \"showFilter\", \"syncWithLocation\", \"sort\", \"total\"]);\n\n  return rest;\n};\n\nexport default ListView;","map":null,"metadata":{},"sourceType":"module"}