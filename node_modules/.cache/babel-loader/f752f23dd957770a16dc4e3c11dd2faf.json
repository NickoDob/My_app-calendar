{"ast":null,"code":"/**\r\n * Helper function for calling the dataProvider.getMany() method,\r\n * and getting a Promise for the records indexed by id in return.\r\n *\r\n * @example\r\n *     fetchRelatedRecords(dataProvider)(records, 'post_id', 'posts').then(posts =>\r\n *         posts.map(record => ({\r\n *             ...record,\r\n *             post_title: posts[record.post_id].title,\r\n *         }))\r\n *     );\r\n */\nvar fetchRelatedRecords = function fetchRelatedRecords(dataProvider) {\n  return function (data, field, resource) {\n    return dataProvider.getMany(resource, {\n      ids: getRelatedIds(data, field)\n    }).then(function (_a) {\n      var data = _a.data;\n      return data.reduce(function (acc, post) {\n        acc[post.id] = post;\n        return acc;\n      }, {});\n    });\n  };\n};\n/**\r\n * Extracts, aggregates and deduplicates the ids of related records\r\n *\r\n * @example\r\n *     const books = [\r\n *         { id: 1, author_id: 123, title: 'Pride and Prejudice' },\r\n *         { id: 2, author_id: 123, title: 'Sense and Sensibility' },\r\n *         { id: 3, author_id: 456, title: 'War and Peace' },\r\n *     ];\r\n *     getRelatedIds(books, 'author_id'); => [123, 456]\r\n *\r\n * @example\r\n *     const books = [\r\n *         { id: 1, tag_ids: [1, 2], title: 'Pride and Prejudice' },\r\n *         { id: 2, tag_ids: [2, 3], title: 'Sense and Sensibility' },\r\n *         { id: 3, tag_ids: [4], title: 'War and Peace' },\r\n *     ];\r\n *     getRelatedIds(records, 'tag_ids'); => [1, 2, 3, 4]\r\n *\r\n * @param {Object[]} records An array of records\r\n * @param {string} field the identifier of the record field to use\r\n */\n\n\nexport var getRelatedIds = function getRelatedIds(records, field) {\n  return Array.from(new Set(records.filter(function (record) {\n    return record[field] != null;\n  }).map(function (record) {\n    return record[field];\n  }).reduce(function (ids, value) {\n    return ids.concat(value);\n  }, [])));\n};\nexport default fetchRelatedRecords;","map":null,"metadata":{},"sourceType":"module"}