{"ast":null,"code":"import * as React from 'react';\nimport { createContext, useContext } from 'react';\n/**\n * Context to store the current record.\n *\n * Use the useRecordContext() hook to read the context. That's what the Edit and Show components do in react-admin.\n *\n * @example\n *\n * import { useEditController, EditContext } from 'ra-core';\n *\n * const Edit = props => {\n *     const { record } = useEditController(props);\n *     return (\n *         <RecordContextProvider value={record}>\n *             ...\n *         </RecordContextProvider>\n *     );\n * };\n */\n\nexport var RecordContext = createContext(undefined);\nexport var RecordContextProvider = function RecordContextProvider(_a) {\n  var children = _a.children,\n      value = _a.value;\n  return React.createElement(RecordContext.Provider, {\n    value: value\n  }, children);\n};\nRecordContext.displayName = 'RecordContext';\n/**\n * Hook to read the record from a RecordContext.\n *\n * Must be used within a <RecordContext> such as provided by the <EditContextProvider>\n * (e.g. as a descendent of <Edit> or <EditBase>) or within a <ShowContextProvider>\n * (e.g. as a descendent of <Show> or <ShowBase>)\n *\n * @example // basic usage\n *\n * import { useRecordContext } from 'ra-core';\n *\n * const TitleField = () => {\n *     const record = useRecordContext();\n *     return <span>{record && record.title}</span>;\n * };\n *\n * @example // allow record override via props\n *\n * import { useRecordContext } from 'ra-core';\n *\n * const TitleField = (props) => {\n *     const record = useRecordContext(props);\n *     return <span>{record && record.title}</span>;\n * };\n * render(<TextField record={record} />);\n *\n * @returns {Record} A record object\n */\n\nexport var useRecordContext = function useRecordContext(props) {\n  // Can't find a way to specify the RecordType when CreateContext is declared\n  // @ts-ignore\n  var context = useContext(RecordContext);\n  return props && props.record || context;\n};","map":null,"metadata":{},"sourceType":"module"}