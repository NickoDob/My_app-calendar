{"ast":null,"code":"import * as React from 'react';\nimport { memo } from 'react';\nimport useTranslate from '../i18n/useTranslate';\nimport getFieldLabelTranslationArgs from './getFieldLabelTranslationArgs';\nexport var FieldTitle = function FieldTitle(_a) {\n  var resource = _a.resource,\n      source = _a.source,\n      label = _a.label,\n      isRequired = _a.isRequired;\n  var translate = useTranslate();\n\n  if (label === false || label === '') {\n    return null;\n  }\n\n  if (label && typeof label !== 'string') {\n    return label;\n  }\n\n  return React.createElement(\"span\", null, translate.apply(void 0, getFieldLabelTranslationArgs({\n    label: label,\n    resource: resource,\n    source: source\n  })), isRequired && ' *');\n}; // What? TypeScript loses the displayName if we don't set it explicitly\n\nFieldTitle.displayName = 'FieldTitle';\nexport default memo(FieldTitle);","map":null,"metadata":{},"sourceType":"module"}