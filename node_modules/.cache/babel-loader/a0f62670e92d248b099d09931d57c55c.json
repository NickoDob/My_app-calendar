{"ast":null,"code":"import { createContext, useMemo } from 'react';\nimport pick from 'lodash/pick';\n/**\r\n * Context to store the sort part of the useListController() result.\r\n *\r\n * Use the useListSortContext() hook to read the context. That's what many\r\n * List components do in react-admin (e.g. <SortButton>).\r\n *\r\n * @typedef {Object} ListSortContextValue\r\n * @prop {Object}   currentSort a sort object { field, order }, e.g. { field: 'date', order: 'DESC' }\r\n * @prop {Function} setSort a callback to change the sort, e.g. setSort('name', 'ASC')\r\n * @prop {string}   resource the resource name, deduced from the location. e.g. 'posts'\r\n *\r\n * @typedef Props\r\n * @prop {ListSortContextValue} value\r\n *\r\n * @param {Props}\r\n *\r\n * @see useListController\r\n * @see useListSortContext\r\n *\r\n * @example\r\n *\r\n * import { useListController, usePickSortContext, ListSortContext } from 'ra-core';\r\n *\r\n * const List = props => {\r\n *     const controllerProps = useListController(props);\r\n *     return (\r\n *         <ListSortContext.Provider value={usePickSortContext(controllerProps)}>\r\n *             ...\r\n *         </ListSortContext.Provider>\r\n *     );\r\n * };\r\n */\n\nvar ListSortContext = createContext({\n  currentSort: null,\n  setSort: null,\n  resource: null\n});\nexport var usePickSortContext = function usePickSortContext(context) {\n  return useMemo(function () {\n    return pick(context, ['currentSort', 'setSort', 'resource']);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [context.currentSort, context.setSort]);\n};\nListSortContext.displayName = 'ListSortContext';\nexport default ListSortContext;","map":null,"metadata":{},"sourceType":"module"}