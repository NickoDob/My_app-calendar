{"ast":null,"code":"import * as React from 'react';\nimport { TranslatableContextProvider, useTranslatable } from 'ra-core';\nimport { TranslatableInputsTabs } from './TranslatableInputsTabs';\nimport { TranslatableInputsTabContent } from './TranslatableInputsTabContent';\nimport { makeStyles } from '@material-ui/core/styles';\n/**\n * Provides a way to edit multiple languages for any input passed as children.\n * It expects the translatable values to have the following structure:\n * {\n *     name: {\n *         en: 'The english value',\n *         fr: 'The french value',\n *         tlh: 'The klingon value',\n *     },\n *     description: {\n *         en: 'The english value',\n *         fr: 'The french value',\n *         tlh: 'The klingon value',\n *     }\n * }\n *\n * @example <caption>Basic usage</caption>\n * <TranslatableInputs locales={['en', 'fr']}>\n *     <TextInput source=\"title\" />\n *     <RichTextInput source=\"description\" />\n * </Translatable>\n *\n * @example <caption>With a custom language selector</caption>\n * <TranslatableInputs\n *     selector={<MyLanguageSelector />}\n *     locales={['en', 'fr']}\n * >\n *     <TextInput source=\"title\" />\n * </Translatable>\n *\n * const MyLanguageSelector = () => {\n *     const {\n *         locales,\n *         selectedLocale,\n *         selectLocale,\n *     } = useTranslatableContext();\n *\n *     return (\n *         <select onChange={event => selectLocale(event.target.value)}>\n *             {locales.map((locale) => (\n *                 <option selected={locale === selectedLocale}>\n *                     {locale}\n *                 </option>\n *             ))}\n *        </select>\n *     );\n * }\n *\n * * @param props The component props\n * * @param {string} props.defaultLocale The locale selected by default. Default to 'en'.\n * * @param {string[]} props.locales An array of the possible locales. For example: `['en', 'fr'].\n * * @param {ReactElement} props.selector The element responsible for selecting a locale. Defaults to Material UI tabs.\n */\n\nexport var TranslatableInputs = function TranslatableInputs(props) {\n  var defaultLocale = props.defaultLocale,\n      locales = props.locales,\n      _a = props.groupKey,\n      groupKey = _a === void 0 ? '' : _a,\n      _b = props.selector,\n      selector = _b === void 0 ? React.createElement(TranslatableInputsTabs, {\n    groupKey: groupKey\n  }) : _b,\n      children = props.children;\n  var context = useTranslatable({\n    defaultLocale: defaultLocale,\n    locales: locales\n  });\n  var classes = useStyles(props);\n  return React.createElement(\"div\", {\n    className: classes.root\n  }, React.createElement(TranslatableContextProvider, {\n    value: context\n  }, selector, locales.map(function (locale) {\n    return React.createElement(TranslatableInputsTabContent, {\n      key: locale,\n      locale: locale,\n      groupKey: groupKey\n    }, children);\n  })));\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 1,\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(0.5)\n    }\n  };\n}, {\n  name: 'RaTranslatableInputs'\n});","map":null,"metadata":{},"sourceType":"module"}