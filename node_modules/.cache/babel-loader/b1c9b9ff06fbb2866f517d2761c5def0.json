{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport BulkUpdateWithConfirmButton from './BulkUpdateWithConfirmButton';\nimport BulkUpdateWithUndoButton from './BulkUpdateWithUndoButton';\n/**\n * Updates the selected rows.\n *\n * To be used inside the <List bulkActionButtons> prop (where it's enabled by default).\n *\n * @example // basic usage\n * import * as React from 'react';\n * import { Fragment } from 'react';\n * import { BulkUpdateButton, BulkExportButton } from 'react-admin';\n *\n * const PostBulkActionButtons = ({ basePath }) => (\n *     <Fragment>\n *         <BulkExportButton />\n *         <BulkUpdateButton label=\"Reset Views\" data={{ views: 0 }} basePath={basePath} />\n *     </Fragment>\n * );\n *\n * export const PostList = (props) => (\n *     <List {...props} bulkActionButtons={<PostBulkActionButtons />}>\n *         ...\n *     </List>\n * );\n */\n\nvar BulkUpdateButton = function BulkUpdateButton(_a) {\n  var mutationMode = _a.mutationMode,\n      props = __rest(_a, [\"mutationMode\"]);\n\n  return mutationMode === 'undoable' ? React.createElement(BulkUpdateWithUndoButton, __assign({}, props)) : React.createElement(BulkUpdateWithConfirmButton, __assign({\n    mutationMode: mutationMode\n  }, props));\n};\n\nBulkUpdateButton.propTypes = {\n  basePath: PropTypes.string,\n  label: PropTypes.string,\n  resource: PropTypes.string,\n  selectedIds: PropTypes.arrayOf(PropTypes.any),\n  mutationMode: PropTypes.oneOf(['pessimistic', 'optimistic', 'undoable']),\n  icon: PropTypes.element\n};\nBulkUpdateButton.defaultProps = {\n  mutationMode: 'undoable',\n  data: []\n};\nexport default BulkUpdateButton;","map":null,"metadata":{},"sourceType":"module"}