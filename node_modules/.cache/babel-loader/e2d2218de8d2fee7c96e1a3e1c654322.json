{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Drawer, useMediaQuery } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport lodashGet from 'lodash/get';\nimport { setSidebarVisibility, useLocale } from 'ra-core';\nexport var DRAWER_WIDTH = 240;\nexport var CLOSED_DRAWER_WIDTH = 55;\n\nvar Sidebar = function Sidebar(props) {\n  var children = props.children,\n      closedSize = props.closedSize,\n      size = props.size,\n      classesOverride = props.classes,\n      rest = __rest(props, [\"children\", \"closedSize\", \"size\", \"classes\"]);\n\n  var dispatch = useDispatch();\n  var isXSmall = useMediaQuery(function (theme) {\n    return theme.breakpoints.down('xs');\n  });\n  var isSmall = useMediaQuery(function (theme) {\n    return theme.breakpoints.down('sm');\n  });\n  var open = useSelector(function (state) {\n    return state.admin.ui.sidebarOpen;\n  });\n  useLocale(); // force redraw on locale change\n\n  var toggleSidebar = function toggleSidebar() {\n    return dispatch(setSidebarVisibility(!open));\n  };\n\n  var _a = useStyles(__assign(__assign({}, props), {\n    open: open\n  })),\n      drawerPaper = _a.drawerPaper,\n      classes = __rest(_a, [\"drawerPaper\"]);\n\n  return isXSmall ? React.createElement(Drawer, __assign({\n    variant: \"temporary\",\n    open: open,\n    PaperProps: {\n      className: drawerPaper\n    },\n    onClose: toggleSidebar,\n    classes: classes\n  }, rest), children) : isSmall ? React.createElement(Drawer, __assign({\n    variant: \"permanent\",\n    open: open,\n    PaperProps: {\n      className: drawerPaper\n    },\n    onClose: toggleSidebar,\n    classes: classes\n  }, rest), children) : React.createElement(Drawer, __assign({\n    variant: \"permanent\",\n    open: open,\n    PaperProps: {\n      className: drawerPaper\n    },\n    onClose: toggleSidebar,\n    classes: classes\n  }, rest), children);\n};\n\nSidebar.propTypes = {\n  children: PropTypes.node.isRequired\n};\nvar useStyles = makeStyles(function (theme) {\n  var _a;\n\n  return {\n    root: {},\n    docked: {},\n    paper: {},\n    paperAnchorLeft: {},\n    paperAnchorRight: {},\n    paperAnchorTop: {},\n    paperAnchorBottom: {},\n    paperAnchorDockedLeft: {},\n    paperAnchorDockedTop: {},\n    paperAnchorDockedRight: {},\n    paperAnchorDockedBottom: {},\n    modal: {},\n    drawerPaper: (_a = {\n      position: 'relative',\n      height: '100%',\n      overflowX: 'hidden',\n      width: function width(props) {\n        return props.open ? lodashGet(theme, 'sidebar.width', DRAWER_WIDTH) : lodashGet(theme, 'sidebar.closedWidth', CLOSED_DRAWER_WIDTH);\n      },\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      backgroundColor: 'transparent',\n      borderRight: 'none'\n    }, _a[theme.breakpoints.only('xs')] = {\n      marginTop: 0,\n      height: '100vh',\n      position: 'inherit',\n      backgroundColor: theme.palette.background.default\n    }, _a[theme.breakpoints.up('md')] = {\n      border: 'none'\n    }, _a.zIndex = 'inherit', _a)\n  };\n}, {\n  name: 'RaSidebar'\n});\nexport default Sidebar;","map":null,"metadata":{},"sourceType":"module"}