{"ast":null,"code":"import { useContext } from 'react';\nimport { ResourceContext } from './ResourceContext';\n/**\r\n * Hook to read the resource from the ResourceContext.\r\n *\r\n * Must be used within a <ResourceContextProvider> (e.g. as a descendent of <Resource>\r\n * or any reference related components), or called with a resource prop.\r\n *\r\n * @example\r\n *\r\n * const ResourceName = (props) => {\r\n *   const { resource } = useResourceContext(props);\r\n *   const getResourceLabel = useGetResourceLabel();\r\n *   return <>{getResourceLabel(resource, 1)}</>;\r\n * }\r\n *\r\n * // use it in a resource context\r\n * const MyComponent = () => (\r\n *   <ResourceContextProvider value=\"posts\">\r\n *     <ResourceName />\r\n *     ...\r\n *   </ResourceContextProvider>\r\n * );\r\n *\r\n * // override resource via props\r\n * const MyComponent = () => (\r\n *   <>\r\n *     <ResourceName resource=\"posts\"/>\r\n *     ...\r\n *   </>\r\n * );\r\n *\r\n * @returns {ResourceContextValue} The resource name, e.g. 'posts'\r\n */\n\nexport var useResourceContext = function useResourceContext(props) {\n  var context = useContext(ResourceContext);\n  return props && props.resource || context;\n};","map":null,"metadata":{},"sourceType":"module"}